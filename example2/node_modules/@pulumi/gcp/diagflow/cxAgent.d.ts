import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way.
 *
 * To get more information about Agent, see:
 *
 * * [API documentation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dialogflow/cx/docs)
 *
 * ## Example Usage
 * ### Dialogflowcx Agent Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const fullAgent = new gcp.diagflow.CxAgent("fullAgent", {
 *     avatarUri: "https://cloud.google.com/_static/images/cloud/icons/favicons/onecloud/super_cloud.png",
 *     defaultLanguageCode: "en",
 *     description: "Example description.",
 *     displayName: "dialogflowcx-agent",
 *     enableSpellCorrection: true,
 *     enableStackdriverLogging: true,
 *     location: "global",
 *     speechToTextSettings: {
 *         enableSpeechAdaptation: true,
 *     },
 *     supportedLanguageCodes: [
 *         "fr",
 *         "de",
 *         "es",
 *     ],
 *     timeZone: "America/New_York",
 * });
 * ```
 *
 * ## Import
 *
 * Agent can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:diagflow/cxAgent:CxAgent default projects/{{project}}/locations/{{location}}/agents/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:diagflow/cxAgent:CxAgent default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:diagflow/cxAgent:CxAgent default {{location}}/{{name}}
 * ```
 */
export declare class CxAgent extends pulumi.CustomResource {
    /**
     * Get an existing CxAgent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CxAgentState, opts?: pulumi.CustomResourceOptions): CxAgent;
    /**
     * Returns true if the given object is an instance of CxAgent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CxAgent;
    /**
     * The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
     */
    readonly avatarUri: pulumi.Output<string | undefined>;
    /**
     * The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
     * for a list of the currently supported language codes. This field cannot be updated after creation.
     */
    readonly defaultLanguageCode: pulumi.Output<string>;
    /**
     * The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The human-readable name of the agent, unique within the location.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * Indicates if automatic spell correction is enabled in detect intent requests.
     */
    readonly enableSpellCorrection: pulumi.Output<boolean | undefined>;
    /**
     * Determines whether this agent should log conversation queries.
     */
    readonly enableStackdriverLogging: pulumi.Output<boolean | undefined>;
    /**
     * The name of the location this agent is located in.
     * > **Note:** The first time you are deploying an Agent in your project you must configure location settings.
     * This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
     * Another options is to use global location so you don't need to manually configure location settings.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The unique identifier of the agent.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
     */
    readonly securitySettings: pulumi.Output<string | undefined>;
    /**
     * Settings related to speech recognition.
     * Structure is documented below.
     */
    readonly speechToTextSettings: pulumi.Output<outputs.diagflow.CxAgentSpeechToTextSettings | undefined>;
    /**
     * Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
     */
    readonly startFlow: pulumi.Output<string>;
    /**
     * The list of all languages supported by this agent (except for the default_language_code).
     */
    readonly supportedLanguageCodes: pulumi.Output<string[] | undefined>;
    /**
     * The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
     * Europe/Paris.
     */
    readonly timeZone: pulumi.Output<string>;
    /**
     * Create a CxAgent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CxAgentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CxAgent resources.
 */
export interface CxAgentState {
    /**
     * The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
     */
    avatarUri?: pulumi.Input<string>;
    /**
     * The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
     * for a list of the currently supported language codes. This field cannot be updated after creation.
     */
    defaultLanguageCode?: pulumi.Input<string>;
    /**
     * The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    description?: pulumi.Input<string>;
    /**
     * The human-readable name of the agent, unique within the location.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Indicates if automatic spell correction is enabled in detect intent requests.
     */
    enableSpellCorrection?: pulumi.Input<boolean>;
    /**
     * Determines whether this agent should log conversation queries.
     */
    enableStackdriverLogging?: pulumi.Input<boolean>;
    /**
     * The name of the location this agent is located in.
     * > **Note:** The first time you are deploying an Agent in your project you must configure location settings.
     * This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
     * Another options is to use global location so you don't need to manually configure location settings.
     */
    location?: pulumi.Input<string>;
    /**
     * The unique identifier of the agent.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
     */
    securitySettings?: pulumi.Input<string>;
    /**
     * Settings related to speech recognition.
     * Structure is documented below.
     */
    speechToTextSettings?: pulumi.Input<inputs.diagflow.CxAgentSpeechToTextSettings>;
    /**
     * Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
     */
    startFlow?: pulumi.Input<string>;
    /**
     * The list of all languages supported by this agent (except for the default_language_code).
     */
    supportedLanguageCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
     * Europe/Paris.
     */
    timeZone?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CxAgent resource.
 */
export interface CxAgentArgs {
    /**
     * The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
     */
    avatarUri?: pulumi.Input<string>;
    /**
     * The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
     * for a list of the currently supported language codes. This field cannot be updated after creation.
     */
    defaultLanguageCode: pulumi.Input<string>;
    /**
     * The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    description?: pulumi.Input<string>;
    /**
     * The human-readable name of the agent, unique within the location.
     */
    displayName: pulumi.Input<string>;
    /**
     * Indicates if automatic spell correction is enabled in detect intent requests.
     */
    enableSpellCorrection?: pulumi.Input<boolean>;
    /**
     * Determines whether this agent should log conversation queries.
     */
    enableStackdriverLogging?: pulumi.Input<boolean>;
    /**
     * The name of the location this agent is located in.
     * > **Note:** The first time you are deploying an Agent in your project you must configure location settings.
     * This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
     * Another options is to use global location so you don't need to manually configure location settings.
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
     */
    securitySettings?: pulumi.Input<string>;
    /**
     * Settings related to speech recognition.
     * Structure is documented below.
     */
    speechToTextSettings?: pulumi.Input<inputs.diagflow.CxAgentSpeechToTextSettings>;
    /**
     * The list of all languages supported by this agent (except for the default_language_code).
     */
    supportedLanguageCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
     * Europe/Paris.
     */
    timeZone: pulumi.Input<string>;
}
