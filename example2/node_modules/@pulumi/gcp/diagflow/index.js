"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Intent = exports.Fulfillment = exports.EntityType = exports.CxWebhook = exports.CxVersion = exports.CxPage = exports.CxIntent = exports.CxFlow = exports.CxEnvironment = exports.CxEntityType = exports.CxAgent = exports.Agent = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Agent = null;
utilities.lazyLoad(exports, ["Agent"], () => require("./agent"));
exports.CxAgent = null;
utilities.lazyLoad(exports, ["CxAgent"], () => require("./cxAgent"));
exports.CxEntityType = null;
utilities.lazyLoad(exports, ["CxEntityType"], () => require("./cxEntityType"));
exports.CxEnvironment = null;
utilities.lazyLoad(exports, ["CxEnvironment"], () => require("./cxEnvironment"));
exports.CxFlow = null;
utilities.lazyLoad(exports, ["CxFlow"], () => require("./cxFlow"));
exports.CxIntent = null;
utilities.lazyLoad(exports, ["CxIntent"], () => require("./cxIntent"));
exports.CxPage = null;
utilities.lazyLoad(exports, ["CxPage"], () => require("./cxPage"));
exports.CxVersion = null;
utilities.lazyLoad(exports, ["CxVersion"], () => require("./cxVersion"));
exports.CxWebhook = null;
utilities.lazyLoad(exports, ["CxWebhook"], () => require("./cxWebhook"));
exports.EntityType = null;
utilities.lazyLoad(exports, ["EntityType"], () => require("./entityType"));
exports.Fulfillment = null;
utilities.lazyLoad(exports, ["Fulfillment"], () => require("./fulfillment"));
exports.Intent = null;
utilities.lazyLoad(exports, ["Intent"], () => require("./intent"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:diagflow/agent:Agent":
                return new exports.Agent(name, undefined, { urn });
            case "gcp:diagflow/cxAgent:CxAgent":
                return new exports.CxAgent(name, undefined, { urn });
            case "gcp:diagflow/cxEntityType:CxEntityType":
                return new exports.CxEntityType(name, undefined, { urn });
            case "gcp:diagflow/cxEnvironment:CxEnvironment":
                return new exports.CxEnvironment(name, undefined, { urn });
            case "gcp:diagflow/cxFlow:CxFlow":
                return new exports.CxFlow(name, undefined, { urn });
            case "gcp:diagflow/cxIntent:CxIntent":
                return new exports.CxIntent(name, undefined, { urn });
            case "gcp:diagflow/cxPage:CxPage":
                return new exports.CxPage(name, undefined, { urn });
            case "gcp:diagflow/cxVersion:CxVersion":
                return new exports.CxVersion(name, undefined, { urn });
            case "gcp:diagflow/cxWebhook:CxWebhook":
                return new exports.CxWebhook(name, undefined, { urn });
            case "gcp:diagflow/entityType:EntityType":
                return new exports.EntityType(name, undefined, { urn });
            case "gcp:diagflow/fulfillment:Fulfillment":
                return new exports.Fulfillment(name, undefined, { urn });
            case "gcp:diagflow/intent:Intent":
                return new exports.Intent(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "diagflow/agent", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/cxAgent", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/cxEntityType", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/cxEnvironment", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/cxFlow", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/cxIntent", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/cxPage", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/cxVersion", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/cxWebhook", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/entityType", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/fulfillment", _module);
pulumi.runtime.registerResourceModule("gcp", "diagflow/intent", _module);
//# sourceMappingURL=index.js.map