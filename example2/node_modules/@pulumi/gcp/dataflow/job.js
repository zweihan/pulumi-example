"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Job = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Import
 *
 * Dataflow jobs can be imported using the job `id` e.g.
 *
 * ```sh
 *  $ pulumi import gcp:dataflow/job:Job example 2022-07-31_06_25_42-11926927532632678660
 * ```
 */
class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Job(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["additionalExperiments"] = state ? state.additionalExperiments : undefined;
            resourceInputs["enableStreamingEngine"] = state ? state.enableStreamingEngine : undefined;
            resourceInputs["ipConfiguration"] = state ? state.ipConfiguration : undefined;
            resourceInputs["jobId"] = state ? state.jobId : undefined;
            resourceInputs["kmsKeyName"] = state ? state.kmsKeyName : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["machineType"] = state ? state.machineType : undefined;
            resourceInputs["maxWorkers"] = state ? state.maxWorkers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["onDelete"] = state ? state.onDelete : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["serviceAccountEmail"] = state ? state.serviceAccountEmail : undefined;
            resourceInputs["skipWaitOnJobTermination"] = state ? state.skipWaitOnJobTermination : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subnetwork"] = state ? state.subnetwork : undefined;
            resourceInputs["tempGcsLocation"] = state ? state.tempGcsLocation : undefined;
            resourceInputs["templateGcsPath"] = state ? state.templateGcsPath : undefined;
            resourceInputs["transformNameMapping"] = state ? state.transformNameMapping : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.tempGcsLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tempGcsLocation'");
            }
            if ((!args || args.templateGcsPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateGcsPath'");
            }
            resourceInputs["additionalExperiments"] = args ? args.additionalExperiments : undefined;
            resourceInputs["enableStreamingEngine"] = args ? args.enableStreamingEngine : undefined;
            resourceInputs["ipConfiguration"] = args ? args.ipConfiguration : undefined;
            resourceInputs["kmsKeyName"] = args ? args.kmsKeyName : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["machineType"] = args ? args.machineType : undefined;
            resourceInputs["maxWorkers"] = args ? args.maxWorkers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["onDelete"] = args ? args.onDelete : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["serviceAccountEmail"] = args ? args.serviceAccountEmail : undefined;
            resourceInputs["skipWaitOnJobTermination"] = args ? args.skipWaitOnJobTermination : undefined;
            resourceInputs["subnetwork"] = args ? args.subnetwork : undefined;
            resourceInputs["tempGcsLocation"] = args ? args.tempGcsLocation : undefined;
            resourceInputs["templateGcsPath"] = args ? args.templateGcsPath : undefined;
            resourceInputs["transformNameMapping"] = args ? args.transformNameMapping : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["jobId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Job.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Job = Job;
/** @internal */
Job.__pulumiType = 'gcp:dataflow/job:Job';
//# sourceMappingURL=job.js.map