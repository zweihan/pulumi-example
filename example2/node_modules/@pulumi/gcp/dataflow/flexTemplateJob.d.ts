import * as pulumi from "@pulumi/pulumi";
/**
 * ## Import
 *
 * This resource does not support import.
 */
export declare class FlexTemplateJob extends pulumi.CustomResource {
    /**
     * Get an existing FlexTemplateJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlexTemplateJobState, opts?: pulumi.CustomResourceOptions): FlexTemplateJob;
    /**
     * Returns true if the given object is an instance of FlexTemplateJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FlexTemplateJob;
    /**
     * The GCS path to the Dataflow job Flex
     * Template.
     */
    readonly containerSpecGcsPath: pulumi.Output<string>;
    /**
     * The unique ID of this job.
     */
    readonly jobId: pulumi.Output<string>;
    /**
     * User labels to be specified for the job. Keys and values
     * should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
     * page. **Note**: This field is marked as deprecated as the API does not currently
     * support adding labels.
     * **NOTE**: Google-provided Dataflow templates often provide default labels
     * that begin with `goog-dataflow-provided`. Unless explicitly set in config, these
     * labels will be ignored to prevent diffs on re-apply.
     */
    readonly labels: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * A unique name for the resource, required by Dataflow.
     */
    readonly name: pulumi.Output<string>;
    /**
     * One of "drain" or "cancel". Specifies behavior of
     * deletion during `pulumi destroy`.  See above note.
     */
    readonly onDelete: pulumi.Output<string | undefined>;
    /**
     * Key/Value pairs to be passed to the Dataflow job (as
     * used in the template). Additional [pipeline options](https://cloud.google.com/dataflow/docs/guides/specifying-exec-params#setting-other-cloud-dataflow-pipeline-options)
     * such as `serviceAccount`, `workerMachineType`, etc can be specified here.
     */
    readonly parameters: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The project in which the resource belongs. If it is not
     * provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The region in which the created job should run.
     */
    readonly region: pulumi.Output<string>;
    /**
     * If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from
     * terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are
     * different, e.g. by embedding a release ID or by using a random_id.
     */
    readonly skipWaitOnJobTermination: pulumi.Output<boolean | undefined>;
    /**
     * The current state of the resource, selected from the [JobState enum](https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs#Job.JobState)
     */
    readonly state: pulumi.Output<string>;
    /**
     * Create a FlexTemplateJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlexTemplateJobArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FlexTemplateJob resources.
 */
export interface FlexTemplateJobState {
    /**
     * The GCS path to the Dataflow job Flex
     * Template.
     */
    containerSpecGcsPath?: pulumi.Input<string>;
    /**
     * The unique ID of this job.
     */
    jobId?: pulumi.Input<string>;
    /**
     * User labels to be specified for the job. Keys and values
     * should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
     * page. **Note**: This field is marked as deprecated as the API does not currently
     * support adding labels.
     * **NOTE**: Google-provided Dataflow templates often provide default labels
     * that begin with `goog-dataflow-provided`. Unless explicitly set in config, these
     * labels will be ignored to prevent diffs on re-apply.
     */
    labels?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * A unique name for the resource, required by Dataflow.
     */
    name?: pulumi.Input<string>;
    /**
     * One of "drain" or "cancel". Specifies behavior of
     * deletion during `pulumi destroy`.  See above note.
     */
    onDelete?: pulumi.Input<string>;
    /**
     * Key/Value pairs to be passed to the Dataflow job (as
     * used in the template). Additional [pipeline options](https://cloud.google.com/dataflow/docs/guides/specifying-exec-params#setting-other-cloud-dataflow-pipeline-options)
     * such as `serviceAccount`, `workerMachineType`, etc can be specified here.
     */
    parameters?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The project in which the resource belongs. If it is not
     * provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region in which the created job should run.
     */
    region?: pulumi.Input<string>;
    /**
     * If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from
     * terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are
     * different, e.g. by embedding a release ID or by using a random_id.
     */
    skipWaitOnJobTermination?: pulumi.Input<boolean>;
    /**
     * The current state of the resource, selected from the [JobState enum](https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs#Job.JobState)
     */
    state?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a FlexTemplateJob resource.
 */
export interface FlexTemplateJobArgs {
    /**
     * The GCS path to the Dataflow job Flex
     * Template.
     */
    containerSpecGcsPath: pulumi.Input<string>;
    /**
     * User labels to be specified for the job. Keys and values
     * should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
     * page. **Note**: This field is marked as deprecated as the API does not currently
     * support adding labels.
     * **NOTE**: Google-provided Dataflow templates often provide default labels
     * that begin with `goog-dataflow-provided`. Unless explicitly set in config, these
     * labels will be ignored to prevent diffs on re-apply.
     */
    labels?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * A unique name for the resource, required by Dataflow.
     */
    name?: pulumi.Input<string>;
    /**
     * One of "drain" or "cancel". Specifies behavior of
     * deletion during `pulumi destroy`.  See above note.
     */
    onDelete?: pulumi.Input<string>;
    /**
     * Key/Value pairs to be passed to the Dataflow job (as
     * used in the template). Additional [pipeline options](https://cloud.google.com/dataflow/docs/guides/specifying-exec-params#setting-other-cloud-dataflow-pipeline-options)
     * such as `serviceAccount`, `workerMachineType`, etc can be specified here.
     */
    parameters?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The project in which the resource belongs. If it is not
     * provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region in which the created job should run.
     */
    region?: pulumi.Input<string>;
    /**
     * If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from
     * terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are
     * different, e.g. by embedding a release ID or by using a random_id.
     */
    skipWaitOnJobTermination?: pulumi.Input<boolean>;
}
