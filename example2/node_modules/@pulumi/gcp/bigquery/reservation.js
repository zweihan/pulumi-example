"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Reservation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A reservation is a mechanism used to guarantee BigQuery slots to users.
 *
 * To get more information about Reservation, see:
 *
 * * [API documentation](https://cloud.google.com/bigquery/docs/reference/reservations/rest/v1/projects.locations.reservations/create)
 * * How-to Guides
 *     * [Introduction to Reservations](https://cloud.google.com/bigquery/docs/reservations-intro)
 *
 * ## Example Usage
 * ### Bigquery Reservation Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const reservation = new gcp.bigquery.Reservation("reservation", {
 *     autoscale: {
 *         maxSlots: 100,
 *     },
 *     concurrency: 0,
 *     edition: "STANDARD",
 *     ignoreIdleSlots: true,
 *     location: "us-west2",
 *     slotCapacity: 0,
 * });
 * ```
 *
 * ## Import
 *
 * Reservation can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:bigquery/reservation:Reservation default projects/{{project}}/locations/{{location}}/reservations/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:bigquery/reservation:Reservation default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:bigquery/reservation:Reservation default {{location}}/{{name}}
 * ```
 */
class Reservation extends pulumi.CustomResource {
    /**
     * Get an existing Reservation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Reservation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Reservation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Reservation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["autoscale"] = state ? state.autoscale : undefined;
            resourceInputs["concurrency"] = state ? state.concurrency : undefined;
            resourceInputs["edition"] = state ? state.edition : undefined;
            resourceInputs["ignoreIdleSlots"] = state ? state.ignoreIdleSlots : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["multiRegionAuxiliary"] = state ? state.multiRegionAuxiliary : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["slotCapacity"] = state ? state.slotCapacity : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.slotCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slotCapacity'");
            }
            resourceInputs["autoscale"] = args ? args.autoscale : undefined;
            resourceInputs["concurrency"] = args ? args.concurrency : undefined;
            resourceInputs["edition"] = args ? args.edition : undefined;
            resourceInputs["ignoreIdleSlots"] = args ? args.ignoreIdleSlots : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["multiRegionAuxiliary"] = args ? args.multiRegionAuxiliary : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["slotCapacity"] = args ? args.slotCapacity : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Reservation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Reservation = Reservation;
/** @internal */
Reservation.__pulumiType = 'gcp:bigquery/reservation:Reservation';
//# sourceMappingURL=reservation.js.map