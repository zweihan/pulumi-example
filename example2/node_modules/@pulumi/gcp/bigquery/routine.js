"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routine = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A user-defined function or a stored procedure that belongs to a Dataset
 *
 * To get more information about Routine, see:
 *
 * * [API documentation](https://cloud.google.com/bigquery/docs/reference/rest/v2/routines)
 * * How-to Guides
 *     * [Routines Intro](https://cloud.google.com/bigquery/docs/reference/rest/v2/routines)
 *
 * ## Example Usage
 * ### Big Query Routine Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const test = new gcp.bigquery.Dataset("test", {datasetId: "dataset_id"});
 * const sproc = new gcp.bigquery.Routine("sproc", {
 *     datasetId: test.datasetId,
 *     routineId: "routine_id",
 *     routineType: "PROCEDURE",
 *     language: "SQL",
 *     definitionBody: "CREATE FUNCTION Add(x FLOAT64, y FLOAT64) RETURNS FLOAT64 AS (x + y);",
 * });
 * ```
 * ### Big Query Routine Json
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const test = new gcp.bigquery.Dataset("test", {datasetId: "dataset_id"});
 * const sproc = new gcp.bigquery.Routine("sproc", {
 *     datasetId: test.datasetId,
 *     routineId: "routine_id",
 *     routineType: "SCALAR_FUNCTION",
 *     language: "JAVASCRIPT",
 *     definitionBody: "CREATE FUNCTION multiplyInputs return x*y;",
 *     arguments: [
 *         {
 *             name: "x",
 *             dataType: "{\"typeKind\" :  \"FLOAT64\"}",
 *         },
 *         {
 *             name: "y",
 *             dataType: "{\"typeKind\" :  \"FLOAT64\"}",
 *         },
 *     ],
 *     returnType: "{\"typeKind\" :  \"FLOAT64\"}",
 * });
 * ```
 * ### Big Query Routine Tvf
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const test = new gcp.bigquery.Dataset("test", {datasetId: "dataset_id"});
 * const sproc = new gcp.bigquery.Routine("sproc", {
 *     datasetId: test.datasetId,
 *     routineId: "routine_id",
 *     routineType: "TABLE_VALUED_FUNCTION",
 *     language: "SQL",
 *     definitionBody: "SELECT 1 + value AS value\n",
 *     arguments: [{
 *         name: "value",
 *         argumentKind: "FIXED_TYPE",
 *         dataType: JSON.stringify({
 *             typeKind: "INT64",
 *         }),
 *     }],
 *     returnTableType: JSON.stringify({
 *         columns: [{
 *             name: "value",
 *             type: {
 *                 typeKind: "INT64",
 *             },
 *         }],
 *     }),
 * });
 * ```
 *
 * ## Import
 *
 * Routine can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:bigquery/routine:Routine default projects/{{project}}/datasets/{{dataset_id}}/routines/{{routine_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:bigquery/routine:Routine default {{project}}/{{dataset_id}}/{{routine_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:bigquery/routine:Routine default {{dataset_id}}/{{routine_id}}
 * ```
 */
class Routine extends pulumi.CustomResource {
    /**
     * Get an existing Routine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Routine(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Routine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Routine.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arguments"] = state ? state.arguments : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["datasetId"] = state ? state.datasetId : undefined;
            resourceInputs["definitionBody"] = state ? state.definitionBody : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["determinismLevel"] = state ? state.determinismLevel : undefined;
            resourceInputs["importedLibraries"] = state ? state.importedLibraries : undefined;
            resourceInputs["language"] = state ? state.language : undefined;
            resourceInputs["lastModifiedTime"] = state ? state.lastModifiedTime : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["returnTableType"] = state ? state.returnTableType : undefined;
            resourceInputs["returnType"] = state ? state.returnType : undefined;
            resourceInputs["routineId"] = state ? state.routineId : undefined;
            resourceInputs["routineType"] = state ? state.routineType : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.datasetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datasetId'");
            }
            if ((!args || args.definitionBody === undefined) && !opts.urn) {
                throw new Error("Missing required property 'definitionBody'");
            }
            if ((!args || args.routineId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routineId'");
            }
            resourceInputs["arguments"] = args ? args.arguments : undefined;
            resourceInputs["datasetId"] = args ? args.datasetId : undefined;
            resourceInputs["definitionBody"] = args ? args.definitionBody : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["determinismLevel"] = args ? args.determinismLevel : undefined;
            resourceInputs["importedLibraries"] = args ? args.importedLibraries : undefined;
            resourceInputs["language"] = args ? args.language : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["returnTableType"] = args ? args.returnTableType : undefined;
            resourceInputs["returnType"] = args ? args.returnType : undefined;
            resourceInputs["routineId"] = args ? args.routineId : undefined;
            resourceInputs["routineType"] = args ? args.routineType : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Routine.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Routine = Routine;
/** @internal */
Routine.__pulumiType = 'gcp:bigquery/routine:Routine';
//# sourceMappingURL=routine.js.map