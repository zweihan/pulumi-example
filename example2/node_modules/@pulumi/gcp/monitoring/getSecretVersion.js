"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSecretVersionOutput = exports.getSecretVersion = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.secretmanager.getSecretVersion({
 *     secret: "my-secret",
 * });
 * ```
 */
/** @deprecated gcp.monitoring.getSecretVersion has been deprecated in favor of gcp.secretmanager.getSecretVersion */
function getSecretVersion(args, opts) {
    pulumi.log.warn("getSecretVersion is deprecated: gcp.monitoring.getSecretVersion has been deprecated in favor of gcp.secretmanager.getSecretVersion");
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:monitoring/getSecretVersion:getSecretVersion", {
        "project": args.project,
        "secret": args.secret,
        "version": args.version,
    }, opts);
}
exports.getSecretVersion = getSecretVersion;
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.secretmanager.getSecretVersion({
 *     secret: "my-secret",
 * });
 * ```
 */
/** @deprecated gcp.monitoring.getSecretVersion has been deprecated in favor of gcp.secretmanager.getSecretVersion */
function getSecretVersionOutput(args, opts) {
    return pulumi.output(args).apply((a) => getSecretVersion(a, opts));
}
exports.getSecretVersionOutput = getSecretVersionOutput;
//# sourceMappingURL=getSecretVersion.js.map