"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferJob = exports.TransferAgentPool = exports.ObjectAccessControl = exports.ObjectACL = exports.Notification = exports.HmacKey = exports.getTransferProjectServieAccountOutput = exports.getTransferProjectServieAccount = exports.getTransferProjectServiceAccountOutput = exports.getTransferProjectServiceAccount = exports.getProjectServiceAccountOutput = exports.getProjectServiceAccount = exports.getObjectSignedUrlOutput = exports.getObjectSignedUrl = exports.getBucketObjectContentOutput = exports.getBucketObjectContent = exports.getBucketObjectOutput = exports.getBucketObject = exports.getBucketOutput = exports.getBucket = exports.DefaultObjectAccessControl = exports.DefaultObjectACL = exports.BucketObject = exports.BucketIAMPolicy = exports.BucketIAMMember = exports.BucketIAMBinding = exports.BucketAccessControl = exports.BucketACL = exports.Bucket = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Bucket = null;
utilities.lazyLoad(exports, ["Bucket"], () => require("./bucket"));
exports.BucketACL = null;
utilities.lazyLoad(exports, ["BucketACL"], () => require("./bucketACL"));
exports.BucketAccessControl = null;
utilities.lazyLoad(exports, ["BucketAccessControl"], () => require("./bucketAccessControl"));
exports.BucketIAMBinding = null;
utilities.lazyLoad(exports, ["BucketIAMBinding"], () => require("./bucketIAMBinding"));
exports.BucketIAMMember = null;
utilities.lazyLoad(exports, ["BucketIAMMember"], () => require("./bucketIAMMember"));
exports.BucketIAMPolicy = null;
utilities.lazyLoad(exports, ["BucketIAMPolicy"], () => require("./bucketIAMPolicy"));
exports.BucketObject = null;
utilities.lazyLoad(exports, ["BucketObject"], () => require("./bucketObject"));
exports.DefaultObjectACL = null;
utilities.lazyLoad(exports, ["DefaultObjectACL"], () => require("./defaultObjectACL"));
exports.DefaultObjectAccessControl = null;
utilities.lazyLoad(exports, ["DefaultObjectAccessControl"], () => require("./defaultObjectAccessControl"));
exports.getBucket = null;
exports.getBucketOutput = null;
utilities.lazyLoad(exports, ["getBucket", "getBucketOutput"], () => require("./getBucket"));
exports.getBucketObject = null;
exports.getBucketObjectOutput = null;
utilities.lazyLoad(exports, ["getBucketObject", "getBucketObjectOutput"], () => require("./getBucketObject"));
exports.getBucketObjectContent = null;
exports.getBucketObjectContentOutput = null;
utilities.lazyLoad(exports, ["getBucketObjectContent", "getBucketObjectContentOutput"], () => require("./getBucketObjectContent"));
exports.getObjectSignedUrl = null;
exports.getObjectSignedUrlOutput = null;
utilities.lazyLoad(exports, ["getObjectSignedUrl", "getObjectSignedUrlOutput"], () => require("./getObjectSignedUrl"));
exports.getProjectServiceAccount = null;
exports.getProjectServiceAccountOutput = null;
utilities.lazyLoad(exports, ["getProjectServiceAccount", "getProjectServiceAccountOutput"], () => require("./getProjectServiceAccount"));
exports.getTransferProjectServiceAccount = null;
exports.getTransferProjectServiceAccountOutput = null;
utilities.lazyLoad(exports, ["getTransferProjectServiceAccount", "getTransferProjectServiceAccountOutput"], () => require("./getTransferProjectServiceAccount"));
exports.getTransferProjectServieAccount = null;
exports.getTransferProjectServieAccountOutput = null;
utilities.lazyLoad(exports, ["getTransferProjectServieAccount", "getTransferProjectServieAccountOutput"], () => require("./getTransferProjectServieAccount"));
exports.HmacKey = null;
utilities.lazyLoad(exports, ["HmacKey"], () => require("./hmacKey"));
exports.Notification = null;
utilities.lazyLoad(exports, ["Notification"], () => require("./notification"));
exports.ObjectACL = null;
utilities.lazyLoad(exports, ["ObjectACL"], () => require("./objectACL"));
exports.ObjectAccessControl = null;
utilities.lazyLoad(exports, ["ObjectAccessControl"], () => require("./objectAccessControl"));
exports.TransferAgentPool = null;
utilities.lazyLoad(exports, ["TransferAgentPool"], () => require("./transferAgentPool"));
exports.TransferJob = null;
utilities.lazyLoad(exports, ["TransferJob"], () => require("./transferJob"));
__exportStar(require("./zMixins"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:storage/bucket:Bucket":
                return new exports.Bucket(name, undefined, { urn });
            case "gcp:storage/bucketACL:BucketACL":
                return new exports.BucketACL(name, undefined, { urn });
            case "gcp:storage/bucketAccessControl:BucketAccessControl":
                return new exports.BucketAccessControl(name, undefined, { urn });
            case "gcp:storage/bucketIAMBinding:BucketIAMBinding":
                return new exports.BucketIAMBinding(name, undefined, { urn });
            case "gcp:storage/bucketIAMMember:BucketIAMMember":
                return new exports.BucketIAMMember(name, undefined, { urn });
            case "gcp:storage/bucketIAMPolicy:BucketIAMPolicy":
                return new exports.BucketIAMPolicy(name, undefined, { urn });
            case "gcp:storage/bucketObject:BucketObject":
                return new exports.BucketObject(name, undefined, { urn });
            case "gcp:storage/defaultObjectACL:DefaultObjectACL":
                return new exports.DefaultObjectACL(name, undefined, { urn });
            case "gcp:storage/defaultObjectAccessControl:DefaultObjectAccessControl":
                return new exports.DefaultObjectAccessControl(name, undefined, { urn });
            case "gcp:storage/hmacKey:HmacKey":
                return new exports.HmacKey(name, undefined, { urn });
            case "gcp:storage/notification:Notification":
                return new exports.Notification(name, undefined, { urn });
            case "gcp:storage/objectACL:ObjectACL":
                return new exports.ObjectACL(name, undefined, { urn });
            case "gcp:storage/objectAccessControl:ObjectAccessControl":
                return new exports.ObjectAccessControl(name, undefined, { urn });
            case "gcp:storage/transferAgentPool:TransferAgentPool":
                return new exports.TransferAgentPool(name, undefined, { urn });
            case "gcp:storage/transferJob:TransferJob":
                return new exports.TransferJob(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "storage/bucket", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/bucketACL", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/bucketAccessControl", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/bucketIAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/bucketIAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/bucketIAMPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/bucketObject", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/defaultObjectACL", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/defaultObjectAccessControl", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/hmacKey", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/notification", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/objectACL", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/objectAccessControl", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/transferAgentPool", _module);
pulumi.runtime.registerResourceModule("gcp", "storage/transferJob", _module);
//# sourceMappingURL=index.js.map