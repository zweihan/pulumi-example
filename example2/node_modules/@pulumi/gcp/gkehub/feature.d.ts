import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * ## Example Usage
 * ### Multi Cluster Ingress
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const cluster = new gcp.container.Cluster("cluster", {
 *     location: "us-central1-a",
 *     initialNodeCount: 1,
 * }, {
 *     provider: google_beta,
 * });
 * const membership = new gcp.gkehub.Membership("membership", {
 *     membershipId: "my-membership",
 *     endpoint: {
 *         gkeCluster: {
 *             resourceLink: pulumi.interpolate`//container.googleapis.com/${cluster.id}`,
 *         },
 *     },
 *     description: "Membership",
 * }, {
 *     provider: google_beta,
 * });
 * const feature = new gcp.gkehub.Feature("feature", {
 *     location: "global",
 *     spec: {
 *         multiclusteringress: {
 *             configMembership: membership.id,
 *         },
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ### Multi Cluster Service Discovery
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const feature = new gcp.gkehub.Feature("feature", {
 *     location: "global",
 *     labels: {
 *         foo: "bar",
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ### Enable Anthos Service Mesh
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const feature = new gcp.gkehub.Feature("feature", {location: "global"}, {
 *     provider: google_beta,
 * });
 * ```
 *
 * ## Import
 *
 * Feature can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:gkehub/feature:Feature default projects/{{project}}/locations/{{location}}/features/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gkehub/feature:Feature default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gkehub/feature:Feature default {{location}}/{{name}}
 * ```
 */
export declare class Feature extends pulumi.CustomResource {
    /**
     * Get an existing Feature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FeatureState, opts?: pulumi.CustomResourceOptions): Feature;
    /**
     * Returns true if the given object is an instance of Feature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Feature;
    /**
     * Output only. When the Feature resource was created.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Output only. When the Feature resource was deleted.
     */
    readonly deleteTime: pulumi.Output<string>;
    /**
     * GCP labels for this Feature.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The location for the resource
     */
    readonly location: pulumi.Output<string>;
    /**
     * The full, unique name of this Feature resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The project for the resource
     */
    readonly project: pulumi.Output<string>;
    /**
     * State of the Feature resource itself.
     */
    readonly resourceStates: pulumi.Output<outputs.gkehub.FeatureResourceState[]>;
    /**
     * Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.
     */
    readonly spec: pulumi.Output<outputs.gkehub.FeatureSpec | undefined>;
    /**
     * Output only. The Hub-wide Feature state
     */
    readonly states: pulumi.Output<outputs.gkehub.FeatureState[]>;
    /**
     * Output only. When the Feature resource was last updated.
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a Feature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FeatureArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Feature resources.
 */
export interface FeatureState {
    /**
     * Output only. When the Feature resource was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Output only. When the Feature resource was deleted.
     */
    deleteTime?: pulumi.Input<string>;
    /**
     * GCP labels for this Feature.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The location for the resource
     */
    location?: pulumi.Input<string>;
    /**
     * The full, unique name of this Feature resource
     */
    name?: pulumi.Input<string>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * State of the Feature resource itself.
     */
    resourceStates?: pulumi.Input<pulumi.Input<inputs.gkehub.FeatureResourceState>[]>;
    /**
     * Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.
     */
    spec?: pulumi.Input<inputs.gkehub.FeatureSpec>;
    /**
     * Output only. The Hub-wide Feature state
     */
    states?: pulumi.Input<pulumi.Input<inputs.gkehub.FeatureState>[]>;
    /**
     * Output only. When the Feature resource was last updated.
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Feature resource.
 */
export interface FeatureArgs {
    /**
     * GCP labels for this Feature.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The location for the resource
     */
    location: pulumi.Input<string>;
    /**
     * The full, unique name of this Feature resource
     */
    name?: pulumi.Input<string>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.
     */
    spec?: pulumi.Input<inputs.gkehub.FeatureSpec>;
}
