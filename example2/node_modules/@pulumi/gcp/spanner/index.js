"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstanceIAMPolicy = exports.InstanceIAMMember = exports.InstanceIAMBinding = exports.Instance = exports.getInstanceOutput = exports.getInstance = exports.DatabaseIAMPolicy = exports.DatabaseIAMMember = exports.DatabaseIAMBinding = exports.Database = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Database = null;
utilities.lazyLoad(exports, ["Database"], () => require("./database"));
exports.DatabaseIAMBinding = null;
utilities.lazyLoad(exports, ["DatabaseIAMBinding"], () => require("./databaseIAMBinding"));
exports.DatabaseIAMMember = null;
utilities.lazyLoad(exports, ["DatabaseIAMMember"], () => require("./databaseIAMMember"));
exports.DatabaseIAMPolicy = null;
utilities.lazyLoad(exports, ["DatabaseIAMPolicy"], () => require("./databaseIAMPolicy"));
exports.getInstance = null;
exports.getInstanceOutput = null;
utilities.lazyLoad(exports, ["getInstance", "getInstanceOutput"], () => require("./getInstance"));
exports.Instance = null;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));
exports.InstanceIAMBinding = null;
utilities.lazyLoad(exports, ["InstanceIAMBinding"], () => require("./instanceIAMBinding"));
exports.InstanceIAMMember = null;
utilities.lazyLoad(exports, ["InstanceIAMMember"], () => require("./instanceIAMMember"));
exports.InstanceIAMPolicy = null;
utilities.lazyLoad(exports, ["InstanceIAMPolicy"], () => require("./instanceIAMPolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:spanner/database:Database":
                return new exports.Database(name, undefined, { urn });
            case "gcp:spanner/databaseIAMBinding:DatabaseIAMBinding":
                return new exports.DatabaseIAMBinding(name, undefined, { urn });
            case "gcp:spanner/databaseIAMMember:DatabaseIAMMember":
                return new exports.DatabaseIAMMember(name, undefined, { urn });
            case "gcp:spanner/databaseIAMPolicy:DatabaseIAMPolicy":
                return new exports.DatabaseIAMPolicy(name, undefined, { urn });
            case "gcp:spanner/instance:Instance":
                return new exports.Instance(name, undefined, { urn });
            case "gcp:spanner/instanceIAMBinding:InstanceIAMBinding":
                return new exports.InstanceIAMBinding(name, undefined, { urn });
            case "gcp:spanner/instanceIAMMember:InstanceIAMMember":
                return new exports.InstanceIAMMember(name, undefined, { urn });
            case "gcp:spanner/instanceIAMPolicy:InstanceIAMPolicy":
                return new exports.InstanceIAMPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "spanner/database", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/databaseIAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/databaseIAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/databaseIAMPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/instance", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/instanceIAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/instanceIAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/instanceIAMPolicy", _module);
//# sourceMappingURL=index.js.map