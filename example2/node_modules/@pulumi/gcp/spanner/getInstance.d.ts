import * as pulumi from "@pulumi/pulumi";
/**
 * Get a spanner instance from Google Cloud by its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const foo = gcp.spanner.getInstance({
 *     name: "bar",
 * });
 * ```
 */
export declare function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult>;
/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    config?: string;
    displayName?: string;
    /**
     * The name of the spanner instance.
     */
    name: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
}
/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    readonly config?: string;
    readonly displayName?: string;
    readonly forceDestroy: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {
        [key: string]: string;
    };
    readonly name: string;
    readonly numNodes: number;
    readonly processingUnits: number;
    readonly project?: string;
    readonly state: string;
}
/**
 * Get a spanner instance from Google Cloud by its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const foo = gcp.spanner.getInstance({
 *     name: "bar",
 * });
 * ```
 */
export declare function getInstanceOutput(args: GetInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceResult>;
/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceOutputArgs {
    config?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    /**
     * The name of the spanner instance.
     */
    name: pulumi.Input<string>;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
