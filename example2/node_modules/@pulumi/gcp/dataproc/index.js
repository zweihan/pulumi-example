"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowTemplate = exports.MetastoreServiceIamPolicy = exports.MetastoreServiceIamMember = exports.MetastoreServiceIamBinding = exports.MetastoreService = exports.MetastoreFederationIamPolicy = exports.MetastoreFederationIamMember = exports.MetastoreFederationIamBinding = exports.MetastoreFederation = exports.JobIAMPolicy = exports.JobIAMMember = exports.JobIAMBinding = exports.Job = exports.ClusterIAMPolicy = exports.ClusterIAMMember = exports.ClusterIAMBinding = exports.Cluster = exports.AutoscalingPolicyIamPolicy = exports.AutoscalingPolicyIamMember = exports.AutoscalingPolicyIamBinding = exports.AutoscalingPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AutoscalingPolicy = null;
utilities.lazyLoad(exports, ["AutoscalingPolicy"], () => require("./autoscalingPolicy"));
exports.AutoscalingPolicyIamBinding = null;
utilities.lazyLoad(exports, ["AutoscalingPolicyIamBinding"], () => require("./autoscalingPolicyIamBinding"));
exports.AutoscalingPolicyIamMember = null;
utilities.lazyLoad(exports, ["AutoscalingPolicyIamMember"], () => require("./autoscalingPolicyIamMember"));
exports.AutoscalingPolicyIamPolicy = null;
utilities.lazyLoad(exports, ["AutoscalingPolicyIamPolicy"], () => require("./autoscalingPolicyIamPolicy"));
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.ClusterIAMBinding = null;
utilities.lazyLoad(exports, ["ClusterIAMBinding"], () => require("./clusterIAMBinding"));
exports.ClusterIAMMember = null;
utilities.lazyLoad(exports, ["ClusterIAMMember"], () => require("./clusterIAMMember"));
exports.ClusterIAMPolicy = null;
utilities.lazyLoad(exports, ["ClusterIAMPolicy"], () => require("./clusterIAMPolicy"));
exports.Job = null;
utilities.lazyLoad(exports, ["Job"], () => require("./job"));
exports.JobIAMBinding = null;
utilities.lazyLoad(exports, ["JobIAMBinding"], () => require("./jobIAMBinding"));
exports.JobIAMMember = null;
utilities.lazyLoad(exports, ["JobIAMMember"], () => require("./jobIAMMember"));
exports.JobIAMPolicy = null;
utilities.lazyLoad(exports, ["JobIAMPolicy"], () => require("./jobIAMPolicy"));
exports.MetastoreFederation = null;
utilities.lazyLoad(exports, ["MetastoreFederation"], () => require("./metastoreFederation"));
exports.MetastoreFederationIamBinding = null;
utilities.lazyLoad(exports, ["MetastoreFederationIamBinding"], () => require("./metastoreFederationIamBinding"));
exports.MetastoreFederationIamMember = null;
utilities.lazyLoad(exports, ["MetastoreFederationIamMember"], () => require("./metastoreFederationIamMember"));
exports.MetastoreFederationIamPolicy = null;
utilities.lazyLoad(exports, ["MetastoreFederationIamPolicy"], () => require("./metastoreFederationIamPolicy"));
exports.MetastoreService = null;
utilities.lazyLoad(exports, ["MetastoreService"], () => require("./metastoreService"));
exports.MetastoreServiceIamBinding = null;
utilities.lazyLoad(exports, ["MetastoreServiceIamBinding"], () => require("./metastoreServiceIamBinding"));
exports.MetastoreServiceIamMember = null;
utilities.lazyLoad(exports, ["MetastoreServiceIamMember"], () => require("./metastoreServiceIamMember"));
exports.MetastoreServiceIamPolicy = null;
utilities.lazyLoad(exports, ["MetastoreServiceIamPolicy"], () => require("./metastoreServiceIamPolicy"));
exports.WorkflowTemplate = null;
utilities.lazyLoad(exports, ["WorkflowTemplate"], () => require("./workflowTemplate"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:dataproc/autoscalingPolicy:AutoscalingPolicy":
                return new exports.AutoscalingPolicy(name, undefined, { urn });
            case "gcp:dataproc/autoscalingPolicyIamBinding:AutoscalingPolicyIamBinding":
                return new exports.AutoscalingPolicyIamBinding(name, undefined, { urn });
            case "gcp:dataproc/autoscalingPolicyIamMember:AutoscalingPolicyIamMember":
                return new exports.AutoscalingPolicyIamMember(name, undefined, { urn });
            case "gcp:dataproc/autoscalingPolicyIamPolicy:AutoscalingPolicyIamPolicy":
                return new exports.AutoscalingPolicyIamPolicy(name, undefined, { urn });
            case "gcp:dataproc/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "gcp:dataproc/clusterIAMBinding:ClusterIAMBinding":
                return new exports.ClusterIAMBinding(name, undefined, { urn });
            case "gcp:dataproc/clusterIAMMember:ClusterIAMMember":
                return new exports.ClusterIAMMember(name, undefined, { urn });
            case "gcp:dataproc/clusterIAMPolicy:ClusterIAMPolicy":
                return new exports.ClusterIAMPolicy(name, undefined, { urn });
            case "gcp:dataproc/job:Job":
                return new exports.Job(name, undefined, { urn });
            case "gcp:dataproc/jobIAMBinding:JobIAMBinding":
                return new exports.JobIAMBinding(name, undefined, { urn });
            case "gcp:dataproc/jobIAMMember:JobIAMMember":
                return new exports.JobIAMMember(name, undefined, { urn });
            case "gcp:dataproc/jobIAMPolicy:JobIAMPolicy":
                return new exports.JobIAMPolicy(name, undefined, { urn });
            case "gcp:dataproc/metastoreFederation:MetastoreFederation":
                return new exports.MetastoreFederation(name, undefined, { urn });
            case "gcp:dataproc/metastoreFederationIamBinding:MetastoreFederationIamBinding":
                return new exports.MetastoreFederationIamBinding(name, undefined, { urn });
            case "gcp:dataproc/metastoreFederationIamMember:MetastoreFederationIamMember":
                return new exports.MetastoreFederationIamMember(name, undefined, { urn });
            case "gcp:dataproc/metastoreFederationIamPolicy:MetastoreFederationIamPolicy":
                return new exports.MetastoreFederationIamPolicy(name, undefined, { urn });
            case "gcp:dataproc/metastoreService:MetastoreService":
                return new exports.MetastoreService(name, undefined, { urn });
            case "gcp:dataproc/metastoreServiceIamBinding:MetastoreServiceIamBinding":
                return new exports.MetastoreServiceIamBinding(name, undefined, { urn });
            case "gcp:dataproc/metastoreServiceIamMember:MetastoreServiceIamMember":
                return new exports.MetastoreServiceIamMember(name, undefined, { urn });
            case "gcp:dataproc/metastoreServiceIamPolicy:MetastoreServiceIamPolicy":
                return new exports.MetastoreServiceIamPolicy(name, undefined, { urn });
            case "gcp:dataproc/workflowTemplate:WorkflowTemplate":
                return new exports.WorkflowTemplate(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "dataproc/autoscalingPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/autoscalingPolicyIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/autoscalingPolicyIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/autoscalingPolicyIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/cluster", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/clusterIAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/clusterIAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/clusterIAMPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/job", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/jobIAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/jobIAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/jobIAMPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/metastoreFederation", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/metastoreFederationIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/metastoreFederationIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/metastoreFederationIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/metastoreService", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/metastoreServiceIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/metastoreServiceIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/metastoreServiceIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "dataproc/workflowTemplate", _module);
//# sourceMappingURL=index.js.map