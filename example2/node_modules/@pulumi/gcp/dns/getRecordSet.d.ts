import * as pulumi from "@pulumi/pulumi";
/**
 * Get a DNS record set within Google Cloud DNS
 * For more information see
 * [the official documentation](https://cloud.google.com/dns/docs/records)
 * and
 * [API](https://cloud.google.com/dns/docs/reference/v1/resourceRecordSets)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const sample = gcp.dns.getManagedZone({
 *     name: "sample-zone",
 * });
 * const rs = Promise.all([sample, sample]).then(([sample, sample1]) => gcp.dns.getRecordSet({
 *     managedZone: sample.name,
 *     name: `my-record.${sample1.dnsName}`,
 *     type: "A",
 * }));
 * ```
 */
export declare function getRecordSet(args: GetRecordSetArgs, opts?: pulumi.InvokeOptions): Promise<GetRecordSetResult>;
/**
 * A collection of arguments for invoking getRecordSet.
 */
export interface GetRecordSetArgs {
    /**
     * The Name of the zone.
     */
    managedZone: string;
    /**
     * The DNS name for the resource.
     */
    name: string;
    /**
     * The ID of the project for the Google Cloud.
     */
    project?: string;
    /**
     * The RRSet type. [See this table for supported types](https://cloud.google.com/dns/docs/records#record_type).
     */
    type: string;
}
/**
 * A collection of values returned by getRecordSet.
 */
export interface GetRecordSetResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managedZone: string;
    readonly name: string;
    readonly project?: string;
    /**
     * The string data for the records in this record set.
     */
    readonly rrdatas: string[];
    /**
     * The time-to-live of this record set (seconds).
     */
    readonly ttl: number;
    readonly type: string;
}
/**
 * Get a DNS record set within Google Cloud DNS
 * For more information see
 * [the official documentation](https://cloud.google.com/dns/docs/records)
 * and
 * [API](https://cloud.google.com/dns/docs/reference/v1/resourceRecordSets)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const sample = gcp.dns.getManagedZone({
 *     name: "sample-zone",
 * });
 * const rs = Promise.all([sample, sample]).then(([sample, sample1]) => gcp.dns.getRecordSet({
 *     managedZone: sample.name,
 *     name: `my-record.${sample1.dnsName}`,
 *     type: "A",
 * }));
 * ```
 */
export declare function getRecordSetOutput(args: GetRecordSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecordSetResult>;
/**
 * A collection of arguments for invoking getRecordSet.
 */
export interface GetRecordSetOutputArgs {
    /**
     * The Name of the zone.
     */
    managedZone: pulumi.Input<string>;
    /**
     * The DNS name for the resource.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the project for the Google Cloud.
     */
    project?: pulumi.Input<string>;
    /**
     * The RRSet type. [See this table for supported types](https://cloud.google.com/dns/docs/records#record_type).
     */
    type: pulumi.Input<string>;
}
