"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponsePolicyRule = exports.ResponsePolicy = exports.RecordSet = exports.Policy = exports.ManagedZone = exports.getRecordSetOutput = exports.getRecordSet = exports.getManagedZoneOutput = exports.getManagedZone = exports.getKeysOutput = exports.getKeys = exports.DnsManagedZoneIamPolicy = exports.DnsManagedZoneIamMember = exports.DnsManagedZoneIamBinding = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.DnsManagedZoneIamBinding = null;
utilities.lazyLoad(exports, ["DnsManagedZoneIamBinding"], () => require("./dnsManagedZoneIamBinding"));
exports.DnsManagedZoneIamMember = null;
utilities.lazyLoad(exports, ["DnsManagedZoneIamMember"], () => require("./dnsManagedZoneIamMember"));
exports.DnsManagedZoneIamPolicy = null;
utilities.lazyLoad(exports, ["DnsManagedZoneIamPolicy"], () => require("./dnsManagedZoneIamPolicy"));
exports.getKeys = null;
exports.getKeysOutput = null;
utilities.lazyLoad(exports, ["getKeys", "getKeysOutput"], () => require("./getKeys"));
exports.getManagedZone = null;
exports.getManagedZoneOutput = null;
utilities.lazyLoad(exports, ["getManagedZone", "getManagedZoneOutput"], () => require("./getManagedZone"));
exports.getRecordSet = null;
exports.getRecordSetOutput = null;
utilities.lazyLoad(exports, ["getRecordSet", "getRecordSetOutput"], () => require("./getRecordSet"));
exports.ManagedZone = null;
utilities.lazyLoad(exports, ["ManagedZone"], () => require("./managedZone"));
exports.Policy = null;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));
exports.RecordSet = null;
utilities.lazyLoad(exports, ["RecordSet"], () => require("./recordSet"));
exports.ResponsePolicy = null;
utilities.lazyLoad(exports, ["ResponsePolicy"], () => require("./responsePolicy"));
exports.ResponsePolicyRule = null;
utilities.lazyLoad(exports, ["ResponsePolicyRule"], () => require("./responsePolicyRule"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:dns/dnsManagedZoneIamBinding:DnsManagedZoneIamBinding":
                return new exports.DnsManagedZoneIamBinding(name, undefined, { urn });
            case "gcp:dns/dnsManagedZoneIamMember:DnsManagedZoneIamMember":
                return new exports.DnsManagedZoneIamMember(name, undefined, { urn });
            case "gcp:dns/dnsManagedZoneIamPolicy:DnsManagedZoneIamPolicy":
                return new exports.DnsManagedZoneIamPolicy(name, undefined, { urn });
            case "gcp:dns/managedZone:ManagedZone":
                return new exports.ManagedZone(name, undefined, { urn });
            case "gcp:dns/policy:Policy":
                return new exports.Policy(name, undefined, { urn });
            case "gcp:dns/recordSet:RecordSet":
                return new exports.RecordSet(name, undefined, { urn });
            case "gcp:dns/responsePolicy:ResponsePolicy":
                return new exports.ResponsePolicy(name, undefined, { urn });
            case "gcp:dns/responsePolicyRule:ResponsePolicyRule":
                return new exports.ResponsePolicyRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "dns/dnsManagedZoneIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "dns/dnsManagedZoneIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "dns/dnsManagedZoneIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "dns/managedZone", _module);
pulumi.runtime.registerResourceModule("gcp", "dns/policy", _module);
pulumi.runtime.registerResourceModule("gcp", "dns/recordSet", _module);
pulumi.runtime.registerResourceModule("gcp", "dns/responsePolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "dns/responsePolicyRule", _module);
//# sourceMappingURL=index.js.map