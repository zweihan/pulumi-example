import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a project-level logging bucket config. For more information see
 * [the official logging documentation](https://cloud.google.com/logging/docs/) and
 * [Storing Logs](https://cloud.google.com/logging/docs/storage).
 *
 * > **Note:** Logging buckets are automatically created for a given folder, project, organization, billingAccount and cannot be deleted. Creating a resource of this type will acquire and update the resource that already exists at the desired location. These buckets cannot be removed so deleting this resource will remove the bucket config from your state but will leave the logging bucket unchanged. The buckets that are currently automatically created are "_Default" and "_Required".
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.organizations.Project("default", {
 *     projectId: "your-project-id",
 *     orgId: "123456789",
 * });
 * const basic = new gcp.logging.ProjectBucketConfig("basic", {
 *     project: _default.id,
 *     location: "global",
 *     retentionDays: 30,
 *     bucketId: "_Default",
 * });
 * ```
 *
 * Create logging bucket with customId
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = new gcp.logging.ProjectBucketConfig("basic", {
 *     bucketId: "custom-bucket",
 *     location: "global",
 *     project: "project_id",
 *     retentionDays: 30,
 * });
 * ```
 *
 * Create logging bucket with Log Analytics enabled
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const analytics_enabled_bucket = new gcp.logging.ProjectBucketConfig("analytics-enabled-bucket", {
 *     bucketId: "custom-bucket",
 *     enableAnalytics: true,
 *     location: "global",
 *     project: "project_id",
 *     retentionDays: 30,
 * });
 * ```
 *
 * Create logging bucket with customId and cmekSettings
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const cmekSettings = gcp.logging.getProjectCmekSettings({
 *     project: "project_id",
 * });
 * const keyring = new gcp.kms.KeyRing("keyring", {location: "us-central1"});
 * const key = new gcp.kms.CryptoKey("key", {
 *     keyRing: keyring.id,
 *     rotationPeriod: "100000s",
 * });
 * const cryptoKeyBinding = new gcp.kms.CryptoKeyIAMBinding("cryptoKeyBinding", {
 *     cryptoKeyId: key.id,
 *     role: "roles/cloudkms.cryptoKeyEncrypterDecrypter",
 *     members: [cmekSettings.then(cmekSettings => `serviceAccount:${cmekSettings.serviceAccountId}`)],
 * });
 * const example_project_bucket_cmek_settings = new gcp.logging.ProjectBucketConfig("example-project-bucket-cmek-settings", {
 *     project: "project_id",
 *     location: "us-central1",
 *     retentionDays: 30,
 *     bucketId: "custom-bucket",
 *     cmekSettings: {
 *         kmsKeyName: key.id,
 *     },
 * }, {
 *     dependsOn: [cryptoKeyBinding],
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using the following format
 *
 * ```sh
 *  $ pulumi import gcp:logging/projectBucketConfig:ProjectBucketConfig default projects/{{project}}/locations/{{location}}/buckets/{{bucket_id}}
 * ```
 */
export declare class ProjectBucketConfig extends pulumi.CustomResource {
    /**
     * Get an existing ProjectBucketConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectBucketConfigState, opts?: pulumi.CustomResourceOptions): ProjectBucketConfig;
    /**
     * Returns true if the given object is an instance of ProjectBucketConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ProjectBucketConfig;
    /**
     * The name of the logging bucket. Logging automatically creates two log buckets: `_Required` and `_Default`.
     */
    readonly bucketId: pulumi.Output<string>;
    /**
     * The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed. Structure is documented below.
     */
    readonly cmekSettings: pulumi.Output<outputs.logging.ProjectBucketConfigCmekSettings | undefined>;
    /**
     * Describes this bucket.
     */
    readonly description: pulumi.Output<string>;
    /**
     * Whether or not Log Analytics is enabled. Logs for buckets with Log Analytics enabled can be queried in the **Log Analytics** page using SQL queries. Cannot be disabled once enabled.
     */
    readonly enableAnalytics: pulumi.Output<boolean | undefined>;
    /**
     * The bucket's lifecycle such as active or deleted. See [LifecycleState](https://cloud.google.com/logging/docs/reference/v2/rest/v2/billingAccounts.buckets#LogBucket.LifecycleState).
     */
    readonly lifecycleState: pulumi.Output<string>;
    /**
     * The location of the bucket.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The resource name of the CMEK settings.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The parent resource that contains the logging bucket.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
     */
    readonly retentionDays: pulumi.Output<number | undefined>;
    /**
     * Create a ProjectBucketConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectBucketConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ProjectBucketConfig resources.
 */
export interface ProjectBucketConfigState {
    /**
     * The name of the logging bucket. Logging automatically creates two log buckets: `_Required` and `_Default`.
     */
    bucketId?: pulumi.Input<string>;
    /**
     * The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed. Structure is documented below.
     */
    cmekSettings?: pulumi.Input<inputs.logging.ProjectBucketConfigCmekSettings>;
    /**
     * Describes this bucket.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether or not Log Analytics is enabled. Logs for buckets with Log Analytics enabled can be queried in the **Log Analytics** page using SQL queries. Cannot be disabled once enabled.
     */
    enableAnalytics?: pulumi.Input<boolean>;
    /**
     * The bucket's lifecycle such as active or deleted. See [LifecycleState](https://cloud.google.com/logging/docs/reference/v2/rest/v2/billingAccounts.buckets#LogBucket.LifecycleState).
     */
    lifecycleState?: pulumi.Input<string>;
    /**
     * The location of the bucket.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource name of the CMEK settings.
     */
    name?: pulumi.Input<string>;
    /**
     * The parent resource that contains the logging bucket.
     */
    project?: pulumi.Input<string>;
    /**
     * Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
     */
    retentionDays?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a ProjectBucketConfig resource.
 */
export interface ProjectBucketConfigArgs {
    /**
     * The name of the logging bucket. Logging automatically creates two log buckets: `_Required` and `_Default`.
     */
    bucketId: pulumi.Input<string>;
    /**
     * The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed. Structure is documented below.
     */
    cmekSettings?: pulumi.Input<inputs.logging.ProjectBucketConfigCmekSettings>;
    /**
     * Describes this bucket.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether or not Log Analytics is enabled. Logs for buckets with Log Analytics enabled can be queried in the **Log Analytics** page using SQL queries. Cannot be disabled once enabled.
     */
    enableAnalytics?: pulumi.Input<boolean>;
    /**
     * The location of the bucket.
     */
    location: pulumi.Input<string>;
    /**
     * The parent resource that contains the logging bucket.
     */
    project: pulumi.Input<string>;
    /**
     * Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
     */
    retentionDays?: pulumi.Input<number>;
}
