"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Realm = exports.getGameServerDeploymentRolloutOutput = exports.getGameServerDeploymentRollout = exports.GameServerDeploymentRollout = exports.GameServerDeployment = exports.GameServerConfig = exports.GameServerCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.GameServerCluster = null;
utilities.lazyLoad(exports, ["GameServerCluster"], () => require("./gameServerCluster"));
exports.GameServerConfig = null;
utilities.lazyLoad(exports, ["GameServerConfig"], () => require("./gameServerConfig"));
exports.GameServerDeployment = null;
utilities.lazyLoad(exports, ["GameServerDeployment"], () => require("./gameServerDeployment"));
exports.GameServerDeploymentRollout = null;
utilities.lazyLoad(exports, ["GameServerDeploymentRollout"], () => require("./gameServerDeploymentRollout"));
exports.getGameServerDeploymentRollout = null;
exports.getGameServerDeploymentRolloutOutput = null;
utilities.lazyLoad(exports, ["getGameServerDeploymentRollout", "getGameServerDeploymentRolloutOutput"], () => require("./getGameServerDeploymentRollout"));
exports.Realm = null;
utilities.lazyLoad(exports, ["Realm"], () => require("./realm"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:gameservices/gameServerCluster:GameServerCluster":
                return new exports.GameServerCluster(name, undefined, { urn });
            case "gcp:gameservices/gameServerConfig:GameServerConfig":
                return new exports.GameServerConfig(name, undefined, { urn });
            case "gcp:gameservices/gameServerDeployment:GameServerDeployment":
                return new exports.GameServerDeployment(name, undefined, { urn });
            case "gcp:gameservices/gameServerDeploymentRollout:GameServerDeploymentRollout":
                return new exports.GameServerDeploymentRollout(name, undefined, { urn });
            case "gcp:gameservices/realm:Realm":
                return new exports.Realm(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "gameservices/gameServerCluster", _module);
pulumi.runtime.registerResourceModule("gcp", "gameservices/gameServerConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "gameservices/gameServerDeployment", _module);
pulumi.runtime.registerResourceModule("gcp", "gameservices/gameServerDeploymentRollout", _module);
pulumi.runtime.registerResourceModule("gcp", "gameservices/realm", _module);
//# sourceMappingURL=index.js.map