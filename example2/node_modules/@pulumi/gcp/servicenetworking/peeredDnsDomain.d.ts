import * as pulumi from "@pulumi/pulumi";
/**
 * Allows management of a single peered DNS domain for an existing Google Cloud Platform project.
 *
 * When using Google Cloud DNS to manage internal DNS, create peered DNS domains to make your DNS available to services like Google Cloud Build.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const name = new gcp.servicenetworking.PeeredDnsDomain("name", {
 *     dnsSuffix: "example.com.",
 *     network: "default",
 *     project: "10000000",
 *     service: "peering-service",
 * });
 * ```
 *
 * ## Import
 *
 * Project peered DNS domains can be imported using the `service`, `project`, `network` and `name`, e.g.
 *
 * ```sh
 *  $ pulumi import gcp:servicenetworking/peeredDnsDomain:PeeredDnsDomain my_domain services/{service}/projects/{project}/global/networks/{network}/peeredDnsDomains/{name}
 * ```
 *
 *  Where- `service` is the service connection, defaults to `servicenetworking.googleapis.com`. - `project` is the producer project name. - `network` is the consumer network name. - `name` is the name of your peered DNS domain.
 */
export declare class PeeredDnsDomain extends pulumi.CustomResource {
    /**
     * Get an existing PeeredDnsDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PeeredDnsDomainState, opts?: pulumi.CustomResourceOptions): PeeredDnsDomain;
    /**
     * Returns true if the given object is an instance of PeeredDnsDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PeeredDnsDomain;
    /**
     * The DNS domain suffix of the peered DNS domain. Make sure to suffix with a `.` (dot).
     */
    readonly dnsSuffix: pulumi.Output<string>;
    /**
     * Internal name used for the peered DNS domain.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The network in the consumer project.
     */
    readonly network: pulumi.Output<string>;
    /**
     * an identifier for the resource with format `services/{{service}}/projects/{{project}}/global/networks/{{network}}`
     */
    readonly parent: pulumi.Output<string>;
    /**
     * The producer project number. If not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Private service connection between service and consumer network, defaults to `servicenetworking.googleapis.com`
     */
    readonly service: pulumi.Output<string | undefined>;
    /**
     * Create a PeeredDnsDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PeeredDnsDomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering PeeredDnsDomain resources.
 */
export interface PeeredDnsDomainState {
    /**
     * The DNS domain suffix of the peered DNS domain. Make sure to suffix with a `.` (dot).
     */
    dnsSuffix?: pulumi.Input<string>;
    /**
     * Internal name used for the peered DNS domain.
     */
    name?: pulumi.Input<string>;
    /**
     * The network in the consumer project.
     */
    network?: pulumi.Input<string>;
    /**
     * an identifier for the resource with format `services/{{service}}/projects/{{project}}/global/networks/{{network}}`
     */
    parent?: pulumi.Input<string>;
    /**
     * The producer project number. If not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Private service connection between service and consumer network, defaults to `servicenetworking.googleapis.com`
     */
    service?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a PeeredDnsDomain resource.
 */
export interface PeeredDnsDomainArgs {
    /**
     * The DNS domain suffix of the peered DNS domain. Make sure to suffix with a `.` (dot).
     */
    dnsSuffix: pulumi.Input<string>;
    /**
     * Internal name used for the peered DNS domain.
     */
    name?: pulumi.Input<string>;
    /**
     * The network in the consumer project.
     */
    network: pulumi.Input<string>;
    /**
     * The producer project number. If not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Private service connection between service and consumer network, defaults to `servicenetworking.googleapis.com`
     */
    service?: pulumi.Input<string>;
}
