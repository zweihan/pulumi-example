"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PeeredDnsDomain = exports.getPeeredDnsDomainOutput = exports.getPeeredDnsDomain = exports.Connection = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Connection = null;
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));
exports.getPeeredDnsDomain = null;
exports.getPeeredDnsDomainOutput = null;
utilities.lazyLoad(exports, ["getPeeredDnsDomain", "getPeeredDnsDomainOutput"], () => require("./getPeeredDnsDomain"));
exports.PeeredDnsDomain = null;
utilities.lazyLoad(exports, ["PeeredDnsDomain"], () => require("./peeredDnsDomain"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:servicenetworking/connection:Connection":
                return new exports.Connection(name, undefined, { urn });
            case "gcp:servicenetworking/peeredDnsDomain:PeeredDnsDomain":
                return new exports.PeeredDnsDomain(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "servicenetworking/connection", _module);
pulumi.runtime.registerResourceModule("gcp", "servicenetworking/peeredDnsDomain", _module);
//# sourceMappingURL=index.js.map