"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreventionInspectTemplate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * An inspect job template.
 *
 * To get more information about InspectTemplate, see:
 *
 * * [API documentation](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.inspectTemplates)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dlp/docs/creating-templates-inspect)
 *
 * ## Example Usage
 * ### Dlp Inspect Template Custom Type
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const custom = new gcp.dataloss.PreventionInspectTemplate("custom", {
 *     description: "My description",
 *     displayName: "display_name",
 *     inspectConfig: {
 *         customInfoTypes: [{
 *             infoType: {
 *                 name: "MY_CUSTOM_TYPE",
 *             },
 *             likelihood: "UNLIKELY",
 *             regex: {
 *                 pattern: "test*",
 *             },
 *         }],
 *         infoTypes: [{
 *             name: "EMAIL_ADDRESS",
 *         }],
 *         limits: {
 *             maxFindingsPerItem: 10,
 *             maxFindingsPerRequest: 50,
 *         },
 *         minLikelihood: "UNLIKELY",
 *         ruleSets: [
 *             {
 *                 infoTypes: [{
 *                     name: "EMAIL_ADDRESS",
 *                 }],
 *                 rules: [{
 *                     exclusionRule: {
 *                         matchingType: "MATCHING_TYPE_FULL_MATCH",
 *                         regex: {
 *                             pattern: ".+@example.com",
 *                         },
 *                     },
 *                 }],
 *             },
 *             {
 *                 infoTypes: [{
 *                     name: "MY_CUSTOM_TYPE",
 *                 }],
 *                 rules: [{
 *                     hotwordRule: {
 *                         hotwordRegex: {
 *                             pattern: "example*",
 *                         },
 *                         likelihoodAdjustment: {
 *                             fixedLikelihood: "VERY_LIKELY",
 *                         },
 *                         proximity: {
 *                             windowBefore: 50,
 *                         },
 *                     },
 *                 }],
 *             },
 *         ],
 *     },
 *     parent: "projects/my-project-name",
 * });
 * ```
 * ### Dlp Inspect Template Custom Type Surrogate
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const customTypeSurrogate = new gcp.dataloss.PreventionInspectTemplate("customTypeSurrogate", {
 *     description: "My description",
 *     displayName: "display_name",
 *     inspectConfig: {
 *         customInfoTypes: [{
 *             infoType: {
 *                 name: "MY_CUSTOM_TYPE",
 *             },
 *             likelihood: "UNLIKELY",
 *             surrogateType: {},
 *         }],
 *         infoTypes: [{
 *             name: "EMAIL_ADDRESS",
 *         }],
 *         limits: {
 *             maxFindingsPerItem: 10,
 *             maxFindingsPerRequest: 50,
 *         },
 *         minLikelihood: "UNLIKELY",
 *         ruleSets: [
 *             {
 *                 infoTypes: [{
 *                     name: "EMAIL_ADDRESS",
 *                 }],
 *                 rules: [{
 *                     exclusionRule: {
 *                         matchingType: "MATCHING_TYPE_FULL_MATCH",
 *                         regex: {
 *                             pattern: ".+@example.com",
 *                         },
 *                     },
 *                 }],
 *             },
 *             {
 *                 infoTypes: [{
 *                     name: "MY_CUSTOM_TYPE",
 *                 }],
 *                 rules: [{
 *                     hotwordRule: {
 *                         hotwordRegex: {
 *                             pattern: "example*",
 *                         },
 *                         likelihoodAdjustment: {
 *                             fixedLikelihood: "VERY_LIKELY",
 *                         },
 *                         proximity: {
 *                             windowBefore: 50,
 *                         },
 *                     },
 *                 }],
 *             },
 *         ],
 *     },
 *     parent: "projects/my-project-name",
 * });
 * ```
 *
 * ## Import
 *
 * InspectTemplate can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:dataloss/preventionInspectTemplate:PreventionInspectTemplate default {{parent}}/inspectTemplates/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:dataloss/preventionInspectTemplate:PreventionInspectTemplate default {{parent}}/{{name}}
 * ```
 */
class PreventionInspectTemplate extends pulumi.CustomResource {
    /**
     * Get an existing PreventionInspectTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new PreventionInspectTemplate(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PreventionInspectTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PreventionInspectTemplate.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["inspectConfig"] = state ? state.inspectConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["inspectConfig"] = args ? args.inspectConfig : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PreventionInspectTemplate.__pulumiType, name, resourceInputs, opts);
    }
}
exports.PreventionInspectTemplate = PreventionInspectTemplate;
/** @internal */
PreventionInspectTemplate.__pulumiType = 'gcp:dataloss/preventionInspectTemplate:PreventionInspectTemplate';
//# sourceMappingURL=preventionInspectTemplate.js.map