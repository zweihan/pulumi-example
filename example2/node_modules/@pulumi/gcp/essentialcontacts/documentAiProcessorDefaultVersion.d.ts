import * as pulumi from "@pulumi/pulumi";
/**
 * The default version for the processor. Deleting this resource is a no-op, and does not unset the default version.
 *
 * ## Example Usage
 * ### Documentai Default Version
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const processorDocumentAiProcessor = new gcp.essentialcontacts.DocumentAiProcessor("processorDocumentAiProcessor", {
 *     location: "us",
 *     displayName: "test-processor",
 *     type: "OCR_PROCESSOR",
 * });
 * const processorDocumentAiProcessorDefaultVersion = new gcp.essentialcontacts.DocumentAiProcessorDefaultVersion("processorDocumentAiProcessorDefaultVersion", {
 *     processor: processorDocumentAiProcessor.id,
 *     version: pulumi.interpolate`${processorDocumentAiProcessor.id}/processorVersions/stable`,
 * });
 * ```
 *
 * ## Import
 *
 * ProcessorDefaultVersion can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:essentialcontacts/documentAiProcessorDefaultVersion:DocumentAiProcessorDefaultVersion default {{processor}}
 * ```
 */
export declare class DocumentAiProcessorDefaultVersion extends pulumi.CustomResource {
    /**
     * Get an existing DocumentAiProcessorDefaultVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DocumentAiProcessorDefaultVersionState, opts?: pulumi.CustomResourceOptions): DocumentAiProcessorDefaultVersion;
    /**
     * Returns true if the given object is an instance of DocumentAiProcessorDefaultVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DocumentAiProcessorDefaultVersion;
    /**
     * The processor to set the version on.
     */
    readonly processor: pulumi.Output<string>;
    /**
     * The version to set. Using `stable` or `rc` will cause the API to return the latest version in that release channel.
     * Apply `lifecycle.ignore_changes` to the `version` field to suppress this diff.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a DocumentAiProcessorDefaultVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DocumentAiProcessorDefaultVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DocumentAiProcessorDefaultVersion resources.
 */
export interface DocumentAiProcessorDefaultVersionState {
    /**
     * The processor to set the version on.
     */
    processor?: pulumi.Input<string>;
    /**
     * The version to set. Using `stable` or `rc` will cause the API to return the latest version in that release channel.
     * Apply `lifecycle.ignore_changes` to the `version` field to suppress this diff.
     */
    version?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DocumentAiProcessorDefaultVersion resource.
 */
export interface DocumentAiProcessorDefaultVersionArgs {
    /**
     * The processor to set the version on.
     */
    processor: pulumi.Input<string>;
    /**
     * The version to set. Using `stable` or `rc` will cause the API to return the latest version in that release channel.
     * Apply `lifecycle.ignore_changes` to the `version` field to suppress this diff.
     */
    version: pulumi.Input<string>;
}
