import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Represents a Backup Plan instance.
 *
 * To get more information about BackupPlan, see:
 *
 * * [API documentation](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/projects.locations.backupPlans)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke)
 *
 * ## Example Usage
 * ### Gkebackup Backupplan Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.container.Cluster("primary", {
 *     location: "us-central1",
 *     initialNodeCount: 1,
 *     workloadIdentityConfig: {
 *         workloadPool: "my-project-name.svc.id.goog",
 *     },
 *     addonsConfig: {
 *         gkeBackupAgentConfig: {
 *             enabled: true,
 *         },
 *     },
 * });
 * const basic = new gcp.gkebackup.BackupPlan("basic", {
 *     cluster: primary.id,
 *     location: "us-central1",
 *     backupConfig: {
 *         includeVolumeData: true,
 *         includeSecrets: true,
 *         allNamespaces: true,
 *     },
 * });
 * ```
 * ### Gkebackup Backupplan Autopilot
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.container.Cluster("primary", {
 *     location: "us-central1",
 *     enableAutopilot: true,
 *     ipAllocationPolicy: {},
 *     releaseChannel: {
 *         channel: "RAPID",
 *     },
 *     addonsConfig: {
 *         gkeBackupAgentConfig: {
 *             enabled: true,
 *         },
 *     },
 * });
 * const autopilot = new gcp.gkebackup.BackupPlan("autopilot", {
 *     cluster: primary.id,
 *     location: "us-central1",
 *     backupConfig: {
 *         includeVolumeData: true,
 *         includeSecrets: true,
 *         allNamespaces: true,
 *     },
 * });
 * ```
 * ### Gkebackup Backupplan Cmek
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.container.Cluster("primary", {
 *     location: "us-central1",
 *     initialNodeCount: 1,
 *     workloadIdentityConfig: {
 *         workloadPool: "my-project-name.svc.id.goog",
 *     },
 *     addonsConfig: {
 *         gkeBackupAgentConfig: {
 *             enabled: true,
 *         },
 *     },
 * });
 * const keyRing = new gcp.kms.KeyRing("keyRing", {location: "us-central1"});
 * const cryptoKey = new gcp.kms.CryptoKey("cryptoKey", {keyRing: keyRing.id});
 * const cmek = new gcp.gkebackup.BackupPlan("cmek", {
 *     cluster: primary.id,
 *     location: "us-central1",
 *     backupConfig: {
 *         includeVolumeData: true,
 *         includeSecrets: true,
 *         selectedNamespaces: {
 *             namespaces: [
 *                 "default",
 *                 "test",
 *             ],
 *         },
 *         encryptionKey: {
 *             gcpKmsEncryptionKey: cryptoKey.id,
 *         },
 *     },
 * });
 * ```
 * ### Gkebackup Backupplan Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.container.Cluster("primary", {
 *     location: "us-central1",
 *     initialNodeCount: 1,
 *     workloadIdentityConfig: {
 *         workloadPool: "my-project-name.svc.id.goog",
 *     },
 *     addonsConfig: {
 *         gkeBackupAgentConfig: {
 *             enabled: true,
 *         },
 *     },
 * });
 * const full = new gcp.gkebackup.BackupPlan("full", {
 *     cluster: primary.id,
 *     location: "us-central1",
 *     retentionPolicy: {
 *         backupDeleteLockDays: 30,
 *         backupRetainDays: 180,
 *     },
 *     backupSchedule: {
 *         cronSchedule: "0 9 * * 1",
 *     },
 *     backupConfig: {
 *         includeVolumeData: true,
 *         includeSecrets: true,
 *         selectedApplications: {
 *             namespacedNames: [
 *                 {
 *                     name: "app1",
 *                     namespace: "ns1",
 *                 },
 *                 {
 *                     name: "app2",
 *                     namespace: "ns2",
 *                 },
 *             ],
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * BackupPlan can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:gkebackup/backupPlan:BackupPlan default projects/{{project}}/locations/{{location}}/backupPlans/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gkebackup/backupPlan:BackupPlan default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gkebackup/backupPlan:BackupPlan default {{location}}/{{name}}
 * ```
 */
export declare class BackupPlan extends pulumi.CustomResource {
    /**
     * Get an existing BackupPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupPlanState, opts?: pulumi.CustomResourceOptions): BackupPlan;
    /**
     * Returns true if the given object is an instance of BackupPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BackupPlan;
    /**
     * Defines the configuration of Backups created via this BackupPlan.
     * Structure is documented below.
     */
    readonly backupConfig: pulumi.Output<outputs.gkebackup.BackupPlanBackupConfig | undefined>;
    /**
     * Defines a schedule for automatic Backup creation via this BackupPlan.
     * Structure is documented below.
     */
    readonly backupSchedule: pulumi.Output<outputs.gkebackup.BackupPlanBackupSchedule | undefined>;
    /**
     * The source cluster from which Backups will be created via this BackupPlan.
     */
    readonly cluster: pulumi.Output<string>;
    /**
     * This flag indicates whether this BackupPlan has been deactivated.
     * Setting this field to True locks the BackupPlan such that no further updates will be allowed
     * (except deletes), including the deactivated field itself. It also prevents any new Backups
     * from being created via this BackupPlan (including scheduled Backups).
     */
    readonly deactivated: pulumi.Output<boolean>;
    /**
     * User specified descriptive string for this BackupPlan.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * etag is used for optimistic concurrency control as a way to help prevent simultaneous
     * updates of a backup plan from overwriting each other. It is strongly suggested that
     * systems make use of the 'etag' in the read-modify-write cycle to perform BackupPlan updates
     * in order to avoid race conditions: An etag is returned in the response to backupPlans.get,
     * and systems are expected to put that etag in the request to backupPlans.patch or
     * backupPlans.delete to ensure that their change will be applied to the same version of the resource.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Description: A set of custom labels supplied by the user.
     * A list of key->value pairs.
     * Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The region of the Backup Plan.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The full name of the BackupPlan Resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
     */
    readonly protectedPodCount: pulumi.Output<number>;
    /**
     * RetentionPolicy governs lifecycle of Backups created under this plan.
     * Structure is documented below.
     */
    readonly retentionPolicy: pulumi.Output<outputs.gkebackup.BackupPlanRetentionPolicy | undefined>;
    /**
     * Server generated, unique identifier of UUID format.
     */
    readonly uid: pulumi.Output<string>;
    /**
     * Create a BackupPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupPlanArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering BackupPlan resources.
 */
export interface BackupPlanState {
    /**
     * Defines the configuration of Backups created via this BackupPlan.
     * Structure is documented below.
     */
    backupConfig?: pulumi.Input<inputs.gkebackup.BackupPlanBackupConfig>;
    /**
     * Defines a schedule for automatic Backup creation via this BackupPlan.
     * Structure is documented below.
     */
    backupSchedule?: pulumi.Input<inputs.gkebackup.BackupPlanBackupSchedule>;
    /**
     * The source cluster from which Backups will be created via this BackupPlan.
     */
    cluster?: pulumi.Input<string>;
    /**
     * This flag indicates whether this BackupPlan has been deactivated.
     * Setting this field to True locks the BackupPlan such that no further updates will be allowed
     * (except deletes), including the deactivated field itself. It also prevents any new Backups
     * from being created via this BackupPlan (including scheduled Backups).
     */
    deactivated?: pulumi.Input<boolean>;
    /**
     * User specified descriptive string for this BackupPlan.
     */
    description?: pulumi.Input<string>;
    /**
     * etag is used for optimistic concurrency control as a way to help prevent simultaneous
     * updates of a backup plan from overwriting each other. It is strongly suggested that
     * systems make use of the 'etag' in the read-modify-write cycle to perform BackupPlan updates
     * in order to avoid race conditions: An etag is returned in the response to backupPlans.get,
     * and systems are expected to put that etag in the request to backupPlans.patch or
     * backupPlans.delete to ensure that their change will be applied to the same version of the resource.
     */
    etag?: pulumi.Input<string>;
    /**
     * Description: A set of custom labels supplied by the user.
     * A list of key->value pairs.
     * Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The region of the Backup Plan.
     */
    location?: pulumi.Input<string>;
    /**
     * The full name of the BackupPlan Resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
     */
    protectedPodCount?: pulumi.Input<number>;
    /**
     * RetentionPolicy governs lifecycle of Backups created under this plan.
     * Structure is documented below.
     */
    retentionPolicy?: pulumi.Input<inputs.gkebackup.BackupPlanRetentionPolicy>;
    /**
     * Server generated, unique identifier of UUID format.
     */
    uid?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a BackupPlan resource.
 */
export interface BackupPlanArgs {
    /**
     * Defines the configuration of Backups created via this BackupPlan.
     * Structure is documented below.
     */
    backupConfig?: pulumi.Input<inputs.gkebackup.BackupPlanBackupConfig>;
    /**
     * Defines a schedule for automatic Backup creation via this BackupPlan.
     * Structure is documented below.
     */
    backupSchedule?: pulumi.Input<inputs.gkebackup.BackupPlanBackupSchedule>;
    /**
     * The source cluster from which Backups will be created via this BackupPlan.
     */
    cluster: pulumi.Input<string>;
    /**
     * This flag indicates whether this BackupPlan has been deactivated.
     * Setting this field to True locks the BackupPlan such that no further updates will be allowed
     * (except deletes), including the deactivated field itself. It also prevents any new Backups
     * from being created via this BackupPlan (including scheduled Backups).
     */
    deactivated?: pulumi.Input<boolean>;
    /**
     * User specified descriptive string for this BackupPlan.
     */
    description?: pulumi.Input<string>;
    /**
     * Description: A set of custom labels supplied by the user.
     * A list of key->value pairs.
     * Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The region of the Backup Plan.
     */
    location: pulumi.Input<string>;
    /**
     * The full name of the BackupPlan Resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * RetentionPolicy governs lifecycle of Backups created under this plan.
     * Structure is documented below.
     */
    retentionPolicy?: pulumi.Input<inputs.gkebackup.BackupPlanRetentionPolicy>;
}
