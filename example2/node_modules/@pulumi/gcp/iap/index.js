"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebTypeComputeIamPolicy = exports.WebTypeComputeIamMember = exports.WebTypeComputeIamBinding = exports.WebTypeAppEngingIamPolicy = exports.WebTypeAppEngingIamMember = exports.WebTypeAppEngingIamBinding = exports.WebIamPolicy = exports.WebIamMember = exports.WebIamBinding = exports.WebBackendServiceIamPolicy = exports.WebBackendServiceIamMember = exports.WebBackendServiceIamBinding = exports.TunnelInstanceIAMPolicy = exports.TunnelInstanceIAMMember = exports.TunnelInstanceIAMBinding = exports.TunnelIamPolicy = exports.TunnelIamMember = exports.TunnelIamBinding = exports.getClientOutput = exports.getClient = exports.Client = exports.Brand = exports.AppEngineVersionIamPolicy = exports.AppEngineVersionIamMember = exports.AppEngineVersionIamBinding = exports.AppEngineServiceIamPolicy = exports.AppEngineServiceIamMember = exports.AppEngineServiceIamBinding = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AppEngineServiceIamBinding = null;
utilities.lazyLoad(exports, ["AppEngineServiceIamBinding"], () => require("./appEngineServiceIamBinding"));
exports.AppEngineServiceIamMember = null;
utilities.lazyLoad(exports, ["AppEngineServiceIamMember"], () => require("./appEngineServiceIamMember"));
exports.AppEngineServiceIamPolicy = null;
utilities.lazyLoad(exports, ["AppEngineServiceIamPolicy"], () => require("./appEngineServiceIamPolicy"));
exports.AppEngineVersionIamBinding = null;
utilities.lazyLoad(exports, ["AppEngineVersionIamBinding"], () => require("./appEngineVersionIamBinding"));
exports.AppEngineVersionIamMember = null;
utilities.lazyLoad(exports, ["AppEngineVersionIamMember"], () => require("./appEngineVersionIamMember"));
exports.AppEngineVersionIamPolicy = null;
utilities.lazyLoad(exports, ["AppEngineVersionIamPolicy"], () => require("./appEngineVersionIamPolicy"));
exports.Brand = null;
utilities.lazyLoad(exports, ["Brand"], () => require("./brand"));
exports.Client = null;
utilities.lazyLoad(exports, ["Client"], () => require("./client"));
exports.getClient = null;
exports.getClientOutput = null;
utilities.lazyLoad(exports, ["getClient", "getClientOutput"], () => require("./getClient"));
exports.TunnelIamBinding = null;
utilities.lazyLoad(exports, ["TunnelIamBinding"], () => require("./tunnelIamBinding"));
exports.TunnelIamMember = null;
utilities.lazyLoad(exports, ["TunnelIamMember"], () => require("./tunnelIamMember"));
exports.TunnelIamPolicy = null;
utilities.lazyLoad(exports, ["TunnelIamPolicy"], () => require("./tunnelIamPolicy"));
exports.TunnelInstanceIAMBinding = null;
utilities.lazyLoad(exports, ["TunnelInstanceIAMBinding"], () => require("./tunnelInstanceIAMBinding"));
exports.TunnelInstanceIAMMember = null;
utilities.lazyLoad(exports, ["TunnelInstanceIAMMember"], () => require("./tunnelInstanceIAMMember"));
exports.TunnelInstanceIAMPolicy = null;
utilities.lazyLoad(exports, ["TunnelInstanceIAMPolicy"], () => require("./tunnelInstanceIAMPolicy"));
exports.WebBackendServiceIamBinding = null;
utilities.lazyLoad(exports, ["WebBackendServiceIamBinding"], () => require("./webBackendServiceIamBinding"));
exports.WebBackendServiceIamMember = null;
utilities.lazyLoad(exports, ["WebBackendServiceIamMember"], () => require("./webBackendServiceIamMember"));
exports.WebBackendServiceIamPolicy = null;
utilities.lazyLoad(exports, ["WebBackendServiceIamPolicy"], () => require("./webBackendServiceIamPolicy"));
exports.WebIamBinding = null;
utilities.lazyLoad(exports, ["WebIamBinding"], () => require("./webIamBinding"));
exports.WebIamMember = null;
utilities.lazyLoad(exports, ["WebIamMember"], () => require("./webIamMember"));
exports.WebIamPolicy = null;
utilities.lazyLoad(exports, ["WebIamPolicy"], () => require("./webIamPolicy"));
exports.WebTypeAppEngingIamBinding = null;
utilities.lazyLoad(exports, ["WebTypeAppEngingIamBinding"], () => require("./webTypeAppEngingIamBinding"));
exports.WebTypeAppEngingIamMember = null;
utilities.lazyLoad(exports, ["WebTypeAppEngingIamMember"], () => require("./webTypeAppEngingIamMember"));
exports.WebTypeAppEngingIamPolicy = null;
utilities.lazyLoad(exports, ["WebTypeAppEngingIamPolicy"], () => require("./webTypeAppEngingIamPolicy"));
exports.WebTypeComputeIamBinding = null;
utilities.lazyLoad(exports, ["WebTypeComputeIamBinding"], () => require("./webTypeComputeIamBinding"));
exports.WebTypeComputeIamMember = null;
utilities.lazyLoad(exports, ["WebTypeComputeIamMember"], () => require("./webTypeComputeIamMember"));
exports.WebTypeComputeIamPolicy = null;
utilities.lazyLoad(exports, ["WebTypeComputeIamPolicy"], () => require("./webTypeComputeIamPolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:iap/appEngineServiceIamBinding:AppEngineServiceIamBinding":
                return new exports.AppEngineServiceIamBinding(name, undefined, { urn });
            case "gcp:iap/appEngineServiceIamMember:AppEngineServiceIamMember":
                return new exports.AppEngineServiceIamMember(name, undefined, { urn });
            case "gcp:iap/appEngineServiceIamPolicy:AppEngineServiceIamPolicy":
                return new exports.AppEngineServiceIamPolicy(name, undefined, { urn });
            case "gcp:iap/appEngineVersionIamBinding:AppEngineVersionIamBinding":
                return new exports.AppEngineVersionIamBinding(name, undefined, { urn });
            case "gcp:iap/appEngineVersionIamMember:AppEngineVersionIamMember":
                return new exports.AppEngineVersionIamMember(name, undefined, { urn });
            case "gcp:iap/appEngineVersionIamPolicy:AppEngineVersionIamPolicy":
                return new exports.AppEngineVersionIamPolicy(name, undefined, { urn });
            case "gcp:iap/brand:Brand":
                return new exports.Brand(name, undefined, { urn });
            case "gcp:iap/client:Client":
                return new exports.Client(name, undefined, { urn });
            case "gcp:iap/tunnelIamBinding:TunnelIamBinding":
                return new exports.TunnelIamBinding(name, undefined, { urn });
            case "gcp:iap/tunnelIamMember:TunnelIamMember":
                return new exports.TunnelIamMember(name, undefined, { urn });
            case "gcp:iap/tunnelIamPolicy:TunnelIamPolicy":
                return new exports.TunnelIamPolicy(name, undefined, { urn });
            case "gcp:iap/tunnelInstanceIAMBinding:TunnelInstanceIAMBinding":
                return new exports.TunnelInstanceIAMBinding(name, undefined, { urn });
            case "gcp:iap/tunnelInstanceIAMMember:TunnelInstanceIAMMember":
                return new exports.TunnelInstanceIAMMember(name, undefined, { urn });
            case "gcp:iap/tunnelInstanceIAMPolicy:TunnelInstanceIAMPolicy":
                return new exports.TunnelInstanceIAMPolicy(name, undefined, { urn });
            case "gcp:iap/webBackendServiceIamBinding:WebBackendServiceIamBinding":
                return new exports.WebBackendServiceIamBinding(name, undefined, { urn });
            case "gcp:iap/webBackendServiceIamMember:WebBackendServiceIamMember":
                return new exports.WebBackendServiceIamMember(name, undefined, { urn });
            case "gcp:iap/webBackendServiceIamPolicy:WebBackendServiceIamPolicy":
                return new exports.WebBackendServiceIamPolicy(name, undefined, { urn });
            case "gcp:iap/webIamBinding:WebIamBinding":
                return new exports.WebIamBinding(name, undefined, { urn });
            case "gcp:iap/webIamMember:WebIamMember":
                return new exports.WebIamMember(name, undefined, { urn });
            case "gcp:iap/webIamPolicy:WebIamPolicy":
                return new exports.WebIamPolicy(name, undefined, { urn });
            case "gcp:iap/webTypeAppEngingIamBinding:WebTypeAppEngingIamBinding":
                return new exports.WebTypeAppEngingIamBinding(name, undefined, { urn });
            case "gcp:iap/webTypeAppEngingIamMember:WebTypeAppEngingIamMember":
                return new exports.WebTypeAppEngingIamMember(name, undefined, { urn });
            case "gcp:iap/webTypeAppEngingIamPolicy:WebTypeAppEngingIamPolicy":
                return new exports.WebTypeAppEngingIamPolicy(name, undefined, { urn });
            case "gcp:iap/webTypeComputeIamBinding:WebTypeComputeIamBinding":
                return new exports.WebTypeComputeIamBinding(name, undefined, { urn });
            case "gcp:iap/webTypeComputeIamMember:WebTypeComputeIamMember":
                return new exports.WebTypeComputeIamMember(name, undefined, { urn });
            case "gcp:iap/webTypeComputeIamPolicy:WebTypeComputeIamPolicy":
                return new exports.WebTypeComputeIamPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "iap/appEngineServiceIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/appEngineServiceIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/appEngineServiceIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/appEngineVersionIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/appEngineVersionIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/appEngineVersionIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/brand", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/client", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/tunnelIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/tunnelIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/tunnelIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/tunnelInstanceIAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/tunnelInstanceIAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/tunnelInstanceIAMPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webBackendServiceIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webBackendServiceIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webBackendServiceIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webTypeAppEngingIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webTypeAppEngingIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webTypeAppEngingIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webTypeComputeIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webTypeComputeIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "iap/webTypeComputeIamPolicy", _module);
//# sourceMappingURL=index.js.map