"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Policy = exports.AttestorIamPolicy = exports.AttestorIamMember = exports.AttestorIamBinding = exports.Attestor = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Attestor = null;
utilities.lazyLoad(exports, ["Attestor"], () => require("./attestor"));
exports.AttestorIamBinding = null;
utilities.lazyLoad(exports, ["AttestorIamBinding"], () => require("./attestorIamBinding"));
exports.AttestorIamMember = null;
utilities.lazyLoad(exports, ["AttestorIamMember"], () => require("./attestorIamMember"));
exports.AttestorIamPolicy = null;
utilities.lazyLoad(exports, ["AttestorIamPolicy"], () => require("./attestorIamPolicy"));
exports.Policy = null;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:binaryauthorization/attestor:Attestor":
                return new exports.Attestor(name, undefined, { urn });
            case "gcp:binaryauthorization/attestorIamBinding:AttestorIamBinding":
                return new exports.AttestorIamBinding(name, undefined, { urn });
            case "gcp:binaryauthorization/attestorIamMember:AttestorIamMember":
                return new exports.AttestorIamMember(name, undefined, { urn });
            case "gcp:binaryauthorization/attestorIamPolicy:AttestorIamPolicy":
                return new exports.AttestorIamPolicy(name, undefined, { urn });
            case "gcp:binaryauthorization/policy:Policy":
                return new exports.Policy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "binaryauthorization/attestor", _module);
pulumi.runtime.registerResourceModule("gcp", "binaryauthorization/attestorIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "binaryauthorization/attestorIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "binaryauthorization/attestorIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "binaryauthorization/policy", _module);
//# sourceMappingURL=index.js.map