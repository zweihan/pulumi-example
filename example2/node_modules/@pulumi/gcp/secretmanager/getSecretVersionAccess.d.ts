import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.secretmanager.getSecretVersionAccess({
 *     secret: "my-secret",
 * });
 * ```
 */
export declare function getSecretVersionAccess(args: GetSecretVersionAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretVersionAccessResult>;
/**
 * A collection of arguments for invoking getSecretVersionAccess.
 */
export interface GetSecretVersionAccessArgs {
    /**
     * The project to get the secret version for. If it
     * is not provided, the provider project is used.
     */
    project?: string;
    /**
     * The secret to get the secret version for.
     */
    secret: string;
    /**
     * The version of the secret to get. If it
     * is not provided, the latest version is retrieved.
     */
    version?: string;
}
/**
 * A collection of values returned by getSecretVersionAccess.
 */
export interface GetSecretVersionAccessResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The resource name of the SecretVersion. Format:
     * `projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}`
     */
    readonly name: string;
    readonly project: string;
    readonly secret: string;
    /**
     * The secret data. No larger than 64KiB.
     */
    readonly secretData: string;
    readonly version: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.secretmanager.getSecretVersionAccess({
 *     secret: "my-secret",
 * });
 * ```
 */
export declare function getSecretVersionAccessOutput(args: GetSecretVersionAccessOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretVersionAccessResult>;
/**
 * A collection of arguments for invoking getSecretVersionAccess.
 */
export interface GetSecretVersionAccessOutputArgs {
    /**
     * The project to get the secret version for. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The secret to get the secret version for.
     */
    secret: pulumi.Input<string>;
    /**
     * The version of the secret to get. If it
     * is not provided, the latest version is retrieved.
     */
    version?: pulumi.Input<string>;
}
