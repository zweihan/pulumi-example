import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Use this data source to get information about a Secret Manager Secret
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const qa = gcp.secretmanager.getSecret({
 *     secretId: "foobar",
 * });
 * ```
 */
export declare function getSecret(args: GetSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretResult>;
/**
 * A collection of arguments for invoking getSecret.
 */
export interface GetSecretArgs {
    /**
     * The ID of the project in which the resource belongs.
     */
    project?: string;
    /**
     * The name of the secret.
     */
    secretId: string;
}
/**
 * A collection of values returned by getSecret.
 */
export interface GetSecretResult {
    readonly createTime: string;
    readonly expireTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {
        [key: string]: string;
    };
    readonly name: string;
    readonly project?: string;
    readonly replications: outputs.secretmanager.GetSecretReplication[];
    readonly rotations: outputs.secretmanager.GetSecretRotation[];
    readonly secretId: string;
    readonly topics: outputs.secretmanager.GetSecretTopic[];
    readonly ttl: string;
}
/**
 * Use this data source to get information about a Secret Manager Secret
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const qa = gcp.secretmanager.getSecret({
 *     secretId: "foobar",
 * });
 * ```
 */
export declare function getSecretOutput(args: GetSecretOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretResult>;
/**
 * A collection of arguments for invoking getSecret.
 */
export interface GetSecretOutputArgs {
    /**
     * The ID of the project in which the resource belongs.
     */
    project?: pulumi.Input<string>;
    /**
     * The name of the secret.
     */
    secretId: pulumi.Input<string>;
}
