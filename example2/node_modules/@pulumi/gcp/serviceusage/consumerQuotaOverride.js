"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsumerQuotaOverride = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A consumer override is applied to the consumer on its own authority to limit its own quota usage.
 * Consumer overrides cannot be used to grant more quota than would be allowed by admin overrides,
 * producer overrides, or the default limit of the service.
 *
 * To get more information about ConsumerQuotaOverride, see:
 *
 * * How-to Guides
 *     * [Managing Service Quota](https://cloud.google.com/service-usage/docs/manage-quota)
 *     * [REST API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1beta1/services.consumerQuotaMetrics.limits.consumerOverrides)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * ConsumerQuotaOverride can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:serviceusage/consumerQuotaOverride:ConsumerQuotaOverride default projects/{{project}}/services/{{service}}/consumerQuotaMetrics/{{metric}}/limits/{{limit}}/consumerOverrides/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:serviceusage/consumerQuotaOverride:ConsumerQuotaOverride default services/{{service}}/consumerQuotaMetrics/{{metric}}/limits/{{limit}}/consumerOverrides/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:serviceusage/consumerQuotaOverride:ConsumerQuotaOverride default {{service}}/{{metric}}/{{limit}}/{{name}}
 * ```
 */
class ConsumerQuotaOverride extends pulumi.CustomResource {
    /**
     * Get an existing ConsumerQuotaOverride resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ConsumerQuotaOverride(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ConsumerQuotaOverride.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConsumerQuotaOverride.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["dimensions"] = state ? state.dimensions : undefined;
            resourceInputs["force"] = state ? state.force : undefined;
            resourceInputs["limit"] = state ? state.limit : undefined;
            resourceInputs["metric"] = state ? state.metric : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overrideValue"] = state ? state.overrideValue : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.limit === undefined) && !opts.urn) {
                throw new Error("Missing required property 'limit'");
            }
            if ((!args || args.metric === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metric'");
            }
            if ((!args || args.overrideValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'overrideValue'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            resourceInputs["dimensions"] = args ? args.dimensions : undefined;
            resourceInputs["force"] = args ? args.force : undefined;
            resourceInputs["limit"] = args ? args.limit : undefined;
            resourceInputs["metric"] = args ? args.metric : undefined;
            resourceInputs["overrideValue"] = args ? args.overrideValue : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConsumerQuotaOverride.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ConsumerQuotaOverride = ConsumerQuotaOverride;
/** @internal */
ConsumerQuotaOverride.__pulumiType = 'gcp:serviceusage/consumerQuotaOverride:ConsumerQuotaOverride';
//# sourceMappingURL=consumerQuotaOverride.js.map