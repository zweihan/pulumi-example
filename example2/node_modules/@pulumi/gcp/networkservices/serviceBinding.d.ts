import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 * ### Network Services Service Binding Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultNamespace = new gcp.servicedirectory.Namespace("defaultNamespace", {
 *     namespaceId: "my-namespace",
 *     location: "us-central1",
 * }, {
 *     provider: google_beta,
 * });
 * const defaultService = new gcp.servicedirectory.Service("defaultService", {
 *     serviceId: "my-service",
 *     namespace: defaultNamespace.id,
 *     metadata: {
 *         stage: "prod",
 *         region: "us-central1",
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * const defaultServiceBinding = new gcp.networkservices.ServiceBinding("defaultServiceBinding", {
 *     labels: {
 *         foo: "bar",
 *     },
 *     description: "my description",
 *     service: defaultService.id,
 * }, {
 *     provider: google_beta,
 * });
 * ```
 *
 * ## Import
 *
 * ServiceBinding can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:networkservices/serviceBinding:ServiceBinding default projects/{{project}}/locations/global/serviceBindings/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:networkservices/serviceBinding:ServiceBinding default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:networkservices/serviceBinding:ServiceBinding default {{name}}
 * ```
 */
export declare class ServiceBinding extends pulumi.CustomResource {
    /**
     * Get an existing ServiceBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceBindingState, opts?: pulumi.CustomResourceOptions): ServiceBinding;
    /**
     * Returns true if the given object is an instance of ServiceBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServiceBinding;
    /**
     * Time the ServiceBinding was created in UTC.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Set of label tags associated with the ServiceBinding resource.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Name of the ServiceBinding resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The full Service Directory Service name of the format
     * projects/*&#47;locations/*&#47;namespaces/*&#47;services/*
     */
    readonly service: pulumi.Output<string>;
    /**
     * Time the ServiceBinding was updated in UTC.
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a ServiceBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceBindingArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ServiceBinding resources.
 */
export interface ServiceBindingState {
    /**
     * Time the ServiceBinding was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Set of label tags associated with the ServiceBinding resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of the ServiceBinding resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The full Service Directory Service name of the format
     * projects/*&#47;locations/*&#47;namespaces/*&#47;services/*
     */
    service?: pulumi.Input<string>;
    /**
     * Time the ServiceBinding was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ServiceBinding resource.
 */
export interface ServiceBindingArgs {
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Set of label tags associated with the ServiceBinding resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of the ServiceBinding resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The full Service Directory Service name of the format
     * projects/*&#47;locations/*&#47;namespaces/*&#47;services/*
     */
    service: pulumi.Input<string>;
}
