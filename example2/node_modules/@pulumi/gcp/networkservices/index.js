"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TlsRoute = exports.TcpRoute = exports.ServiceBinding = exports.Mesh = exports.HttpRoute = exports.GrpcRoute = exports.Gateway = exports.EndpointPolicy = exports.EdgeCacheService = exports.EdgeCacheOrigin = exports.EdgeCacheKeyset = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.EdgeCacheKeyset = null;
utilities.lazyLoad(exports, ["EdgeCacheKeyset"], () => require("./edgeCacheKeyset"));
exports.EdgeCacheOrigin = null;
utilities.lazyLoad(exports, ["EdgeCacheOrigin"], () => require("./edgeCacheOrigin"));
exports.EdgeCacheService = null;
utilities.lazyLoad(exports, ["EdgeCacheService"], () => require("./edgeCacheService"));
exports.EndpointPolicy = null;
utilities.lazyLoad(exports, ["EndpointPolicy"], () => require("./endpointPolicy"));
exports.Gateway = null;
utilities.lazyLoad(exports, ["Gateway"], () => require("./gateway"));
exports.GrpcRoute = null;
utilities.lazyLoad(exports, ["GrpcRoute"], () => require("./grpcRoute"));
exports.HttpRoute = null;
utilities.lazyLoad(exports, ["HttpRoute"], () => require("./httpRoute"));
exports.Mesh = null;
utilities.lazyLoad(exports, ["Mesh"], () => require("./mesh"));
exports.ServiceBinding = null;
utilities.lazyLoad(exports, ["ServiceBinding"], () => require("./serviceBinding"));
exports.TcpRoute = null;
utilities.lazyLoad(exports, ["TcpRoute"], () => require("./tcpRoute"));
exports.TlsRoute = null;
utilities.lazyLoad(exports, ["TlsRoute"], () => require("./tlsRoute"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset":
                return new exports.EdgeCacheKeyset(name, undefined, { urn });
            case "gcp:networkservices/edgeCacheOrigin:EdgeCacheOrigin":
                return new exports.EdgeCacheOrigin(name, undefined, { urn });
            case "gcp:networkservices/edgeCacheService:EdgeCacheService":
                return new exports.EdgeCacheService(name, undefined, { urn });
            case "gcp:networkservices/endpointPolicy:EndpointPolicy":
                return new exports.EndpointPolicy(name, undefined, { urn });
            case "gcp:networkservices/gateway:Gateway":
                return new exports.Gateway(name, undefined, { urn });
            case "gcp:networkservices/grpcRoute:GrpcRoute":
                return new exports.GrpcRoute(name, undefined, { urn });
            case "gcp:networkservices/httpRoute:HttpRoute":
                return new exports.HttpRoute(name, undefined, { urn });
            case "gcp:networkservices/mesh:Mesh":
                return new exports.Mesh(name, undefined, { urn });
            case "gcp:networkservices/serviceBinding:ServiceBinding":
                return new exports.ServiceBinding(name, undefined, { urn });
            case "gcp:networkservices/tcpRoute:TcpRoute":
                return new exports.TcpRoute(name, undefined, { urn });
            case "gcp:networkservices/tlsRoute:TlsRoute":
                return new exports.TlsRoute(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "networkservices/edgeCacheKeyset", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/edgeCacheOrigin", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/edgeCacheService", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/endpointPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/gateway", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/grpcRoute", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/httpRoute", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/mesh", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/serviceBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/tcpRoute", _module);
pulumi.runtime.registerResourceModule("gcp", "networkservices/tlsRoute", _module);
//# sourceMappingURL=index.js.map