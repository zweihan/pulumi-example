"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getImageVersionsOutput = exports.getImageVersions = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides access to available Cloud Composer versions in a region for a given project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const all = gcp.composer.getImageVersions({});
 * const test = new gcp.composer.Environment("test", {
 *     region: "us-central1",
 *     config: {
 *         softwareConfig: {
 *             imageVersion: all.then(all => all.imageVersions?.[0]?.imageVersionId),
 *         },
 *     },
 * });
 * ```
 */
function getImageVersions(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:composer/getImageVersions:getImageVersions", {
        "project": args.project,
        "region": args.region,
    }, opts);
}
exports.getImageVersions = getImageVersions;
/**
 * Provides access to available Cloud Composer versions in a region for a given project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const all = gcp.composer.getImageVersions({});
 * const test = new gcp.composer.Environment("test", {
 *     region: "us-central1",
 *     config: {
 *         softwareConfig: {
 *             imageVersion: all.then(all => all.imageVersions?.[0]?.imageVersionId),
 *         },
 *     },
 * });
 * ```
 */
function getImageVersionsOutput(args, opts) {
    return pulumi.output(args).apply((a) => getImageVersions(a, opts));
}
exports.getImageVersionsOutput = getImageVersionsOutput;
//# sourceMappingURL=getImageVersions.js.map