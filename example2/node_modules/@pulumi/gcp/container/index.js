"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Registry = exports.NodePool = exports.getRegistryRepositoryOutput = exports.getRegistryRepository = exports.getRegistryImageOutput = exports.getRegistryImage = exports.getEngineVersionsOutput = exports.getEngineVersions = exports.getClusterOutput = exports.getCluster = exports.getAzureVersionsOutput = exports.getAzureVersions = exports.getAwsVersionsOutput = exports.getAwsVersions = exports.getAttachedVersionsOutput = exports.getAttachedVersions = exports.getAttachedInstallManifestOutput = exports.getAttachedInstallManifest = exports.Cluster = exports.AzureNodePool = exports.AzureCluster = exports.AzureClient = exports.AwsNodePool = exports.AwsCluster = exports.AttachedCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AttachedCluster = null;
utilities.lazyLoad(exports, ["AttachedCluster"], () => require("./attachedCluster"));
exports.AwsCluster = null;
utilities.lazyLoad(exports, ["AwsCluster"], () => require("./awsCluster"));
exports.AwsNodePool = null;
utilities.lazyLoad(exports, ["AwsNodePool"], () => require("./awsNodePool"));
exports.AzureClient = null;
utilities.lazyLoad(exports, ["AzureClient"], () => require("./azureClient"));
exports.AzureCluster = null;
utilities.lazyLoad(exports, ["AzureCluster"], () => require("./azureCluster"));
exports.AzureNodePool = null;
utilities.lazyLoad(exports, ["AzureNodePool"], () => require("./azureNodePool"));
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.getAttachedInstallManifest = null;
exports.getAttachedInstallManifestOutput = null;
utilities.lazyLoad(exports, ["getAttachedInstallManifest", "getAttachedInstallManifestOutput"], () => require("./getAttachedInstallManifest"));
exports.getAttachedVersions = null;
exports.getAttachedVersionsOutput = null;
utilities.lazyLoad(exports, ["getAttachedVersions", "getAttachedVersionsOutput"], () => require("./getAttachedVersions"));
exports.getAwsVersions = null;
exports.getAwsVersionsOutput = null;
utilities.lazyLoad(exports, ["getAwsVersions", "getAwsVersionsOutput"], () => require("./getAwsVersions"));
exports.getAzureVersions = null;
exports.getAzureVersionsOutput = null;
utilities.lazyLoad(exports, ["getAzureVersions", "getAzureVersionsOutput"], () => require("./getAzureVersions"));
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.getEngineVersions = null;
exports.getEngineVersionsOutput = null;
utilities.lazyLoad(exports, ["getEngineVersions", "getEngineVersionsOutput"], () => require("./getEngineVersions"));
exports.getRegistryImage = null;
exports.getRegistryImageOutput = null;
utilities.lazyLoad(exports, ["getRegistryImage", "getRegistryImageOutput"], () => require("./getRegistryImage"));
exports.getRegistryRepository = null;
exports.getRegistryRepositoryOutput = null;
utilities.lazyLoad(exports, ["getRegistryRepository", "getRegistryRepositoryOutput"], () => require("./getRegistryRepository"));
exports.NodePool = null;
utilities.lazyLoad(exports, ["NodePool"], () => require("./nodePool"));
exports.Registry = null;
utilities.lazyLoad(exports, ["Registry"], () => require("./registry"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:container/attachedCluster:AttachedCluster":
                return new exports.AttachedCluster(name, undefined, { urn });
            case "gcp:container/awsCluster:AwsCluster":
                return new exports.AwsCluster(name, undefined, { urn });
            case "gcp:container/awsNodePool:AwsNodePool":
                return new exports.AwsNodePool(name, undefined, { urn });
            case "gcp:container/azureClient:AzureClient":
                return new exports.AzureClient(name, undefined, { urn });
            case "gcp:container/azureCluster:AzureCluster":
                return new exports.AzureCluster(name, undefined, { urn });
            case "gcp:container/azureNodePool:AzureNodePool":
                return new exports.AzureNodePool(name, undefined, { urn });
            case "gcp:container/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "gcp:container/nodePool:NodePool":
                return new exports.NodePool(name, undefined, { urn });
            case "gcp:container/registry:Registry":
                return new exports.Registry(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "container/attachedCluster", _module);
pulumi.runtime.registerResourceModule("gcp", "container/awsCluster", _module);
pulumi.runtime.registerResourceModule("gcp", "container/awsNodePool", _module);
pulumi.runtime.registerResourceModule("gcp", "container/azureClient", _module);
pulumi.runtime.registerResourceModule("gcp", "container/azureCluster", _module);
pulumi.runtime.registerResourceModule("gcp", "container/azureNodePool", _module);
pulumi.runtime.registerResourceModule("gcp", "container/cluster", _module);
pulumi.runtime.registerResourceModule("gcp", "container/nodePool", _module);
pulumi.runtime.registerResourceModule("gcp", "container/registry", _module);
//# sourceMappingURL=index.js.map