"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnterpriseKey = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The RecaptchaEnterprise Key resource
 *
 * ## Example Usage
 * ### Android_key
 * A basic test of recaptcha enterprise key that can be used by Android apps
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.recaptcha.EnterpriseKey("primary", {
 *     androidSettings: {
 *         allowAllPackageNames: true,
 *         allowedPackageNames: [],
 *     },
 *     displayName: "display-name-one",
 *     labels: {
 *         "label-one": "value-one",
 *     },
 *     project: "my-project-name",
 *     testingOptions: {
 *         testingScore: 0.8,
 *     },
 * });
 * ```
 * ### Ios_key
 * A basic test of recaptcha enterprise key that can be used by iOS apps
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.recaptcha.EnterpriseKey("primary", {
 *     displayName: "display-name-one",
 *     iosSettings: {
 *         allowAllBundleIds: true,
 *         allowedBundleIds: [],
 *     },
 *     labels: {
 *         "label-one": "value-one",
 *     },
 *     project: "my-project-name",
 *     testingOptions: {
 *         testingScore: 1,
 *     },
 * });
 * ```
 * ### Minimal_key
 * A minimal test of recaptcha enterprise key
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.recaptcha.EnterpriseKey("primary", {
 *     displayName: "display-name-one",
 *     labels: {},
 *     project: "my-project-name",
 *     webSettings: {
 *         allowAllDomains: true,
 *         integrationType: "SCORE",
 *     },
 * });
 * ```
 * ### Web_key
 * A basic test of recaptcha enterprise key that can be used by websites
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.recaptcha.EnterpriseKey("primary", {
 *     displayName: "display-name-one",
 *     labels: {
 *         "label-one": "value-one",
 *     },
 *     project: "my-project-name",
 *     testingOptions: {
 *         testingChallenge: "NOCAPTCHA",
 *         testingScore: 0.5,
 *     },
 *     webSettings: {
 *         allowAllDomains: true,
 *         allowedDomains: [],
 *         challengeSecurityPreference: "USABILITY",
 *         integrationType: "CHECKBOX",
 *     },
 * });
 * ```
 * ### Web_score_key
 * A basic test of recaptcha enterprise key with score integration type that can be used by websites
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.recaptcha.EnterpriseKey("primary", {
 *     displayName: "display-name-one",
 *     labels: {
 *         "label-one": "value-one",
 *     },
 *     project: "my-project-name",
 *     testingOptions: {
 *         testingScore: 0.5,
 *     },
 *     webSettings: {
 *         allowAllDomains: true,
 *         allowAmpTraffic: false,
 *         allowedDomains: [],
 *         integrationType: "SCORE",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Key can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:recaptcha/enterpriseKey:EnterpriseKey default projects/{{project}}/keys/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:recaptcha/enterpriseKey:EnterpriseKey default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:recaptcha/enterpriseKey:EnterpriseKey default {{name}}
 * ```
 */
class EnterpriseKey extends pulumi.CustomResource {
    /**
     * Get an existing EnterpriseKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new EnterpriseKey(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of EnterpriseKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnterpriseKey.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["androidSettings"] = state ? state.androidSettings : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["iosSettings"] = state ? state.iosSettings : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["testingOptions"] = state ? state.testingOptions : undefined;
            resourceInputs["webSettings"] = state ? state.webSettings : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["androidSettings"] = args ? args.androidSettings : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["iosSettings"] = args ? args.iosSettings : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["testingOptions"] = args ? args.testingOptions : undefined;
            resourceInputs["webSettings"] = args ? args.webSettings : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnterpriseKey.__pulumiType, name, resourceInputs, opts);
    }
}
exports.EnterpriseKey = EnterpriseKey;
/** @internal */
EnterpriseKey.__pulumiType = 'gcp:recaptcha/enterpriseKey:EnterpriseKey';
//# sourceMappingURL=enterpriseKey.js.map