"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationPolicy = exports.IAMPolicy = exports.IAMMember = exports.IAMBinding = exports.IamAuditConfig = exports.getOrganizationPolicyOutput = exports.getOrganizationPolicy = exports.AccessApprovalSettings = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccessApprovalSettings = null;
utilities.lazyLoad(exports, ["AccessApprovalSettings"], () => require("./accessApprovalSettings"));
exports.getOrganizationPolicy = null;
exports.getOrganizationPolicyOutput = null;
utilities.lazyLoad(exports, ["getOrganizationPolicy", "getOrganizationPolicyOutput"], () => require("./getOrganizationPolicy"));
exports.IamAuditConfig = null;
utilities.lazyLoad(exports, ["IamAuditConfig"], () => require("./iamAuditConfig"));
exports.IAMBinding = null;
utilities.lazyLoad(exports, ["IAMBinding"], () => require("./iambinding"));
exports.IAMMember = null;
utilities.lazyLoad(exports, ["IAMMember"], () => require("./iammember"));
exports.IAMPolicy = null;
utilities.lazyLoad(exports, ["IAMPolicy"], () => require("./iampolicy"));
exports.OrganizationPolicy = null;
utilities.lazyLoad(exports, ["OrganizationPolicy"], () => require("./organizationPolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:folder/accessApprovalSettings:AccessApprovalSettings":
                return new exports.AccessApprovalSettings(name, undefined, { urn });
            case "gcp:folder/iAMBinding:IAMBinding":
                return new exports.IAMBinding(name, undefined, { urn });
            case "gcp:folder/iAMMember:IAMMember":
                return new exports.IAMMember(name, undefined, { urn });
            case "gcp:folder/iAMPolicy:IAMPolicy":
                return new exports.IAMPolicy(name, undefined, { urn });
            case "gcp:folder/iamAuditConfig:IamAuditConfig":
                return new exports.IamAuditConfig(name, undefined, { urn });
            case "gcp:folder/organizationPolicy:OrganizationPolicy":
                return new exports.OrganizationPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "folder/accessApprovalSettings", _module);
pulumi.runtime.registerResourceModule("gcp", "folder/iAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "folder/iAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "folder/iAMPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "folder/iamAuditConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "folder/organizationPolicy", _module);
//# sourceMappingURL=index.js.map