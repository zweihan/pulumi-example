import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 * ### Network Security Tls Inspection Policy Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultCaPool = new gcp.certificateauthority.CaPool("defaultCaPool", {
 *     location: "us-central1",
 *     tier: "DEVOPS",
 *     publishingOptions: {
 *         publishCaCert: false,
 *         publishCrl: false,
 *     },
 *     issuancePolicy: {
 *         maximumLifetime: "1209600s",
 *         baselineValues: {
 *             caOptions: {
 *                 isCa: false,
 *             },
 *             keyUsage: {
 *                 baseKeyUsage: {},
 *                 extendedKeyUsage: {
 *                     serverAuth: true,
 *                 },
 *             },
 *         },
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * const defaultAuthority = new gcp.certificateauthority.Authority("defaultAuthority", {
 *     pool: defaultCaPool.name,
 *     certificateAuthorityId: "my-basic-certificate-authority",
 *     location: "us-central1",
 *     lifetime: "86400s",
 *     type: "SELF_SIGNED",
 *     deletionProtection: false,
 *     skipGracePeriod: true,
 *     ignoreActiveCertificatesOnDeletion: true,
 *     config: {
 *         subjectConfig: {
 *             subject: {
 *                 organization: "Test LLC",
 *                 commonName: "my-ca",
 *             },
 *         },
 *         x509Config: {
 *             caOptions: {
 *                 isCa: true,
 *             },
 *             keyUsage: {
 *                 baseKeyUsage: {
 *                     certSign: true,
 *                     crlSign: true,
 *                 },
 *                 extendedKeyUsage: {
 *                     serverAuth: false,
 *                 },
 *             },
 *         },
 *     },
 *     keySpec: {
 *         algorithm: "RSA_PKCS1_4096_SHA256",
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * const defaultTlsInspectionPolicy = new gcp.networksecurity.TlsInspectionPolicy("defaultTlsInspectionPolicy", {
 *     location: "us-central1",
 *     caPool: defaultCaPool.id,
 *     excludePublicCaSet: false,
 * }, {
 *     provider: google_beta,
 *     dependsOn: [
 *         defaultCaPool,
 *         defaultAuthority,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * TlsInspectionPolicy can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:networksecurity/tlsInspectionPolicy:TlsInspectionPolicy default projects/{{project}}/locations/{{location}}/tlsInspectionPolicies/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:networksecurity/tlsInspectionPolicy:TlsInspectionPolicy default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:networksecurity/tlsInspectionPolicy:TlsInspectionPolicy default {{location}}/{{name}}
 * ```
 */
export declare class TlsInspectionPolicy extends pulumi.CustomResource {
    /**
     * Get an existing TlsInspectionPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TlsInspectionPolicyState, opts?: pulumi.CustomResourceOptions): TlsInspectionPolicy;
    /**
     * Returns true if the given object is an instance of TlsInspectionPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TlsInspectionPolicy;
    /**
     * A CA pool resource used to issue interception certificates.
     */
    readonly caPool: pulumi.Output<string>;
    /**
     * The timestamp when the resource was created.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Free-text description of the resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trustConfig will be accepted.
     */
    readonly excludePublicCaSet: pulumi.Output<boolean | undefined>;
    /**
     * The location of the tls inspection policy.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Short name of the TlsInspectionPolicy resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The timestamp when the resource was updated.
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a TlsInspectionPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TlsInspectionPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TlsInspectionPolicy resources.
 */
export interface TlsInspectionPolicyState {
    /**
     * A CA pool resource used to issue interception certificates.
     */
    caPool?: pulumi.Input<string>;
    /**
     * The timestamp when the resource was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Free-text description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trustConfig will be accepted.
     */
    excludePublicCaSet?: pulumi.Input<boolean>;
    /**
     * The location of the tls inspection policy.
     */
    location?: pulumi.Input<string>;
    /**
     * Short name of the TlsInspectionPolicy resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The timestamp when the resource was updated.
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a TlsInspectionPolicy resource.
 */
export interface TlsInspectionPolicyArgs {
    /**
     * A CA pool resource used to issue interception certificates.
     */
    caPool: pulumi.Input<string>;
    /**
     * Free-text description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trustConfig will be accepted.
     */
    excludePublicCaSet?: pulumi.Input<boolean>;
    /**
     * The location of the tls inspection policy.
     */
    location?: pulumi.Input<string>;
    /**
     * Short name of the TlsInspectionPolicy resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
