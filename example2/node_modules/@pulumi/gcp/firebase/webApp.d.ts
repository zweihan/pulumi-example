import * as pulumi from "@pulumi/pulumi";
/**
 * A Google Cloud Firebase web application instance
 *
 * To get more information about WebApp, see:
 *
 * * [API documentation](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps)
 * * How-to Guides
 *     * [Official Documentation](https://firebase.google.com/)
 *
 * ## Example Usage
 * ### Firebase Web App Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultProject = new gcp.organizations.Project("defaultProject", {
 *     projectId: "tf-test",
 *     orgId: "123456789",
 *     labels: {
 *         firebase: "enabled",
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * const defaultFirebase_projectProject = new gcp.firebase.Project("defaultFirebase/projectProject", {project: defaultProject.projectId}, {
 *     provider: google_beta,
 * });
 * const basicWebApp = new gcp.firebase.WebApp("basicWebApp", {
 *     project: defaultProject.projectId,
 *     displayName: "Display Name Basic",
 *     deletionPolicy: "DELETE",
 * }, {
 *     provider: google_beta,
 *     dependsOn: [defaultFirebase / projectProject],
 * });
 * const basicWebAppConfig = gcp.firebase.getWebAppConfigOutput({
 *     webAppId: basicWebApp.appId,
 * });
 * const defaultBucket = new gcp.storage.Bucket("defaultBucket", {location: "US"}, {
 *     provider: google_beta,
 * });
 * const defaultBucketObject = new gcp.storage.BucketObject("defaultBucketObject", {
 *     bucket: defaultBucket.name,
 *     content: pulumi.all([basicWebApp.appId, basicWebAppConfig, basicWebAppConfig, basicWebAppConfig["database_url"] || "", basicWebAppConfig["storage_bucket"] || "", basicWebAppConfig["messaging_sender_id"] || "", basicWebAppConfig["measurement_id"] || ""]).apply(([appId, basicWebAppConfig, basicWebAppConfig1, s, s1, s2, s3]) => JSON.stringify({
 *         appId: appId,
 *         apiKey: basicWebAppConfig.apiKey,
 *         authDomain: basicWebAppConfig1.authDomain,
 *         databaseURL: s,
 *         storageBucket: s1,
 *         messagingSenderId: s2,
 *         measurementId: s3,
 *     })),
 * }, {
 *     provider: google_beta,
 * });
 * ```
 *
 * ## Import
 *
 * WebApp can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:firebase/webApp:WebApp default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:firebase/webApp:WebApp default {{project}} {{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:firebase/webApp:WebApp default {{name}}
 * ```
 */
export declare class WebApp extends pulumi.CustomResource {
    /**
     * Get an existing WebApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebAppState, opts?: pulumi.CustomResourceOptions): WebApp;
    /**
     * Returns true if the given object is an instance of WebApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WebApp;
    /**
     * The globally unique, Firebase-assigned identifier of the App.
     * This identifier should be treated as an opaque token, as the data format is not specified.
     */
    readonly appId: pulumi.Output<string>;
    /**
     * The URLs where the `WebApp` is hosted.
     */
    readonly appUrls: pulumi.Output<string[]>;
    /**
     * Set to 'ABANDON' to allow the WebApp to be untracked from terraform state rather than deleted upon 'terraform destroy'.
     * This is useful becaue the WebApp may be serving traffic. Set to 'DELETE' to delete the WebApp. Default to 'ABANDON'
     */
    readonly deletionPolicy: pulumi.Output<string | undefined>;
    /**
     * The user-assigned display name of the App.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * The fully qualified resource name of the App, for example:
     * projects/projectId/webApps/appId
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Create a WebApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebAppArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WebApp resources.
 */
export interface WebAppState {
    /**
     * The globally unique, Firebase-assigned identifier of the App.
     * This identifier should be treated as an opaque token, as the data format is not specified.
     */
    appId?: pulumi.Input<string>;
    /**
     * The URLs where the `WebApp` is hosted.
     */
    appUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set to 'ABANDON' to allow the WebApp to be untracked from terraform state rather than deleted upon 'terraform destroy'.
     * This is useful becaue the WebApp may be serving traffic. Set to 'DELETE' to delete the WebApp. Default to 'ABANDON'
     */
    deletionPolicy?: pulumi.Input<string>;
    /**
     * The user-assigned display name of the App.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The fully qualified resource name of the App, for example:
     * projects/projectId/webApps/appId
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a WebApp resource.
 */
export interface WebAppArgs {
    /**
     * Set to 'ABANDON' to allow the WebApp to be untracked from terraform state rather than deleted upon 'terraform destroy'.
     * This is useful becaue the WebApp may be serving traffic. Set to 'DELETE' to delete the WebApp. Default to 'ABANDON'
     */
    deletionPolicy?: pulumi.Input<string>;
    /**
     * The user-assigned display name of the App.
     */
    displayName: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
