"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppleApp = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 * ### Firebase Apple App Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.firebase.AppleApp("default", {
 *     project: "my-project-name",
 *     displayName: "Display Name Basic",
 *     bundleId: "apple.app.12345",
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ### Firebase Apple App Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const full = new gcp.firebase.AppleApp("full", {
 *     project: "my-project-name",
 *     displayName: "Display Name Full",
 *     bundleId: "apple.app.12345",
 *     appStoreId: "12345",
 *     teamId: "9987654321",
 * }, {
 *     provider: google_beta,
 * });
 * ```
 *
 * ## Import
 *
 * AppleApp can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:firebase/appleApp:AppleApp default projects/{{project}}/iosApps/{{appId}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:firebase/appleApp:AppleApp default {{project}}/{{appId}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:firebase/appleApp:AppleApp default iosApps/{{appId}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:firebase/appleApp:AppleApp default {{appId}}
 * ```
 */
class AppleApp extends pulumi.CustomResource {
    /**
     * Get an existing AppleApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AppleApp(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AppleApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppleApp.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["appStoreId"] = state ? state.appStoreId : undefined;
            resourceInputs["bundleId"] = state ? state.bundleId : undefined;
            resourceInputs["deletionPolicy"] = state ? state.deletionPolicy : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.bundleId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bundleId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["appStoreId"] = args ? args.appStoreId : undefined;
            resourceInputs["bundleId"] = args ? args.bundleId : undefined;
            resourceInputs["deletionPolicy"] = args ? args.deletionPolicy : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["teamId"] = args ? args.teamId : undefined;
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppleApp.__pulumiType, name, resourceInputs, opts);
    }
}
exports.AppleApp = AppleApp;
/** @internal */
AppleApp.__pulumiType = 'gcp:firebase/appleApp:AppleApp';
//# sourceMappingURL=appleApp.js.map