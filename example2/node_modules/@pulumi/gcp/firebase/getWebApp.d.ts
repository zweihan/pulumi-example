import * as pulumi from "@pulumi/pulumi";
/**
 * A Google Cloud Firebase web application instance
 */
export declare function getWebApp(args: GetWebAppArgs, opts?: pulumi.InvokeOptions): Promise<GetWebAppResult>;
/**
 * A collection of arguments for invoking getWebApp.
 */
export interface GetWebAppArgs {
    /**
     * The appIp of name of the Firebase webApp.
     */
    appId: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: string;
}
/**
 * A collection of values returned by getWebApp.
 */
export interface GetWebAppResult {
    /**
     * Immutable. The globally unique, Firebase-assigned identifier of the App.
     * This identifier should be treated as an opaque token, as the data format is not specified.
     */
    readonly appId: string;
    readonly appUrls: string[];
    readonly deletionPolicy: string;
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The fully qualified resource name of the App, for example:
     * projects/projectId/webApps/appId
     */
    readonly name: string;
    readonly project?: string;
}
/**
 * A Google Cloud Firebase web application instance
 */
export declare function getWebAppOutput(args: GetWebAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebAppResult>;
/**
 * A collection of arguments for invoking getWebApp.
 */
export interface GetWebAppOutputArgs {
    /**
     * The appIp of name of the Firebase webApp.
     */
    appId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
