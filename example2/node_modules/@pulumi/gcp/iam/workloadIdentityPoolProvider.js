"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkloadIdentityPoolProvider = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A configuration for an external identity provider.
 *
 * To get more information about WorkloadIdentityPoolProvider, see:
 *
 * * [API documentation](https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.providers)
 * * How-to Guides
 *     * [Managing workload identity providers](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#managing_workload_identity_providers)
 *
 * ## Example Usage
 * ### Iam Workload Identity Pool Provider Aws Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const pool = new gcp.iam.WorkloadIdentityPool("pool", {workloadIdentityPoolId: "example-pool"});
 * const example = new gcp.iam.WorkloadIdentityPoolProvider("example", {
 *     workloadIdentityPoolId: pool.workloadIdentityPoolId,
 *     workloadIdentityPoolProviderId: "example-prvdr",
 *     aws: {
 *         accountId: "999999999999",
 *     },
 * });
 * ```
 * ### Iam Workload Identity Pool Provider Aws Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const pool = new gcp.iam.WorkloadIdentityPool("pool", {workloadIdentityPoolId: "example-pool"});
 * const example = new gcp.iam.WorkloadIdentityPoolProvider("example", {
 *     workloadIdentityPoolId: pool.workloadIdentityPoolId,
 *     workloadIdentityPoolProviderId: "example-prvdr",
 *     displayName: "Name of provider",
 *     description: "AWS identity pool provider for automated test",
 *     disabled: true,
 *     attributeCondition: "attribute.aws_role==\"arn:aws:sts::999999999999:assumed-role/stack-eu-central-1-lambdaRole\"",
 *     attributeMapping: {
 *         "google.subject": "assertion.arn",
 *         "attribute.aws_account": "assertion.account",
 *         "attribute.environment": "assertion.arn.contains(\":instance-profile/Production\") ? \"prod\" : \"test\"",
 *     },
 *     aws: {
 *         accountId: "999999999999",
 *     },
 * });
 * ```
 * ### Iam Workload Identity Pool Provider Oidc Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const pool = new gcp.iam.WorkloadIdentityPool("pool", {workloadIdentityPoolId: "example-pool"});
 * const example = new gcp.iam.WorkloadIdentityPoolProvider("example", {
 *     workloadIdentityPoolId: pool.workloadIdentityPoolId,
 *     workloadIdentityPoolProviderId: "example-prvdr",
 *     attributeMapping: {
 *         "google.subject": "assertion.sub",
 *     },
 *     oidc: {
 *         issuerUri: "https://sts.windows.net/azure-tenant-id",
 *     },
 * });
 * ```
 * ### Iam Workload Identity Pool Provider Oidc Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const pool = new gcp.iam.WorkloadIdentityPool("pool", {workloadIdentityPoolId: "example-pool"});
 * const example = new gcp.iam.WorkloadIdentityPoolProvider("example", {
 *     workloadIdentityPoolId: pool.workloadIdentityPoolId,
 *     workloadIdentityPoolProviderId: "example-prvdr",
 *     displayName: "Name of provider",
 *     description: "OIDC identity pool provider for automated test",
 *     disabled: true,
 *     attributeCondition: "\"e968c2ef-047c-498d-8d79-16ca1b61e77e\" in assertion.groups",
 *     attributeMapping: {
 *         "google.subject": "\"azure::\" + assertion.tid + \"::\" + assertion.sub",
 *         "attribute.tid": "assertion.tid",
 *         "attribute.managed_identity_name": `      {
 *         "8bb39bdb-1cc5-4447-b7db-a19e920eb111":"workload1",
 *         "55d36609-9bcf-48e0-a366-a3cf19027d2a":"workload2"
 *       }[assertion.oid]
 * `,
 *     },
 *     oidc: {
 *         allowedAudiences: [
 *             "https://example.com/gcp-oidc-federation",
 *             "example.com/gcp-oidc-federation",
 *         ],
 *         issuerUri: "https://sts.windows.net/azure-tenant-id",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * WorkloadIdentityPoolProvider can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider default projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/providers/{{workload_identity_pool_provider_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider default {{project}}/{{workload_identity_pool_id}}/{{workload_identity_pool_provider_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider default {{workload_identity_pool_id}}/{{workload_identity_pool_provider_id}}
 * ```
 */
class WorkloadIdentityPoolProvider extends pulumi.CustomResource {
    /**
     * Get an existing WorkloadIdentityPoolProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WorkloadIdentityPoolProvider(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WorkloadIdentityPoolProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkloadIdentityPoolProvider.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["attributeCondition"] = state ? state.attributeCondition : undefined;
            resourceInputs["attributeMapping"] = state ? state.attributeMapping : undefined;
            resourceInputs["aws"] = state ? state.aws : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oidc"] = state ? state.oidc : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["workloadIdentityPoolId"] = state ? state.workloadIdentityPoolId : undefined;
            resourceInputs["workloadIdentityPoolProviderId"] = state ? state.workloadIdentityPoolProviderId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.workloadIdentityPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workloadIdentityPoolId'");
            }
            if ((!args || args.workloadIdentityPoolProviderId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workloadIdentityPoolProviderId'");
            }
            resourceInputs["attributeCondition"] = args ? args.attributeCondition : undefined;
            resourceInputs["attributeMapping"] = args ? args.attributeMapping : undefined;
            resourceInputs["aws"] = args ? args.aws : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["oidc"] = args ? args.oidc : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["workloadIdentityPoolId"] = args ? args.workloadIdentityPoolId : undefined;
            resourceInputs["workloadIdentityPoolProviderId"] = args ? args.workloadIdentityPoolProviderId : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkloadIdentityPoolProvider.__pulumiType, name, resourceInputs, opts);
    }
}
exports.WorkloadIdentityPoolProvider = WorkloadIdentityPoolProvider;
/** @internal */
WorkloadIdentityPoolProvider.__pulumiType = 'gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider';
//# sourceMappingURL=workloadIdentityPoolProvider.js.map