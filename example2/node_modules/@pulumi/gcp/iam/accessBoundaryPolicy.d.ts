import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Represents a collection of access boundary policies to apply to a given resource.
 * **NOTE**: This is a private feature and users should contact GCP support
 * if they would like to test it.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * AccessBoundaryPolicy can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:iam/accessBoundaryPolicy:AccessBoundaryPolicy default {{parent}}/{{name}}
 * ```
 */
export declare class AccessBoundaryPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AccessBoundaryPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessBoundaryPolicyState, opts?: pulumi.CustomResourceOptions): AccessBoundaryPolicy;
    /**
     * Returns true if the given object is an instance of AccessBoundaryPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccessBoundaryPolicy;
    /**
     * The display name of the rule.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * The hash of the resource. Used internally during updates.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The name of the policy.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The attachment point is identified by its URL-encoded full resource name.
     */
    readonly parent: pulumi.Output<string>;
    /**
     * Rules to be applied.
     * Structure is documented below.
     */
    readonly rules: pulumi.Output<outputs.iam.AccessBoundaryPolicyRule[]>;
    /**
     * Create a AccessBoundaryPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessBoundaryPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccessBoundaryPolicy resources.
 */
export interface AccessBoundaryPolicyState {
    /**
     * The display name of the rule.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The hash of the resource. Used internally during updates.
     */
    etag?: pulumi.Input<string>;
    /**
     * The name of the policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The attachment point is identified by its URL-encoded full resource name.
     */
    parent?: pulumi.Input<string>;
    /**
     * Rules to be applied.
     * Structure is documented below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.iam.AccessBoundaryPolicyRule>[]>;
}
/**
 * The set of arguments for constructing a AccessBoundaryPolicy resource.
 */
export interface AccessBoundaryPolicyArgs {
    /**
     * The display name of the rule.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The attachment point is identified by its URL-encoded full resource name.
     */
    parent: pulumi.Input<string>;
    /**
     * Rules to be applied.
     * Structure is documented below.
     */
    rules: pulumi.Input<pulumi.Input<inputs.iam.AccessBoundaryPolicyRule>[]>;
}
