"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Service = exports.IamPolicy = exports.IamMember = exports.IamBinding = exports.getServiceOutput = exports.getService = exports.getLocationsOutput = exports.getLocations = exports.DomainMapping = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.DomainMapping = null;
utilities.lazyLoad(exports, ["DomainMapping"], () => require("./domainMapping"));
exports.getLocations = null;
exports.getLocationsOutput = null;
utilities.lazyLoad(exports, ["getLocations", "getLocationsOutput"], () => require("./getLocations"));
exports.getService = null;
exports.getServiceOutput = null;
utilities.lazyLoad(exports, ["getService", "getServiceOutput"], () => require("./getService"));
exports.IamBinding = null;
utilities.lazyLoad(exports, ["IamBinding"], () => require("./iamBinding"));
exports.IamMember = null;
utilities.lazyLoad(exports, ["IamMember"], () => require("./iamMember"));
exports.IamPolicy = null;
utilities.lazyLoad(exports, ["IamPolicy"], () => require("./iamPolicy"));
exports.Service = null;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:cloudrun/domainMapping:DomainMapping":
                return new exports.DomainMapping(name, undefined, { urn });
            case "gcp:cloudrun/iamBinding:IamBinding":
                return new exports.IamBinding(name, undefined, { urn });
            case "gcp:cloudrun/iamMember:IamMember":
                return new exports.IamMember(name, undefined, { urn });
            case "gcp:cloudrun/iamPolicy:IamPolicy":
                return new exports.IamPolicy(name, undefined, { urn });
            case "gcp:cloudrun/service:Service":
                return new exports.Service(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "cloudrun/domainMapping", _module);
pulumi.runtime.registerResourceModule("gcp", "cloudrun/iamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "cloudrun/iamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "cloudrun/iamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "cloudrun/service", _module);
//# sourceMappingURL=index.js.map