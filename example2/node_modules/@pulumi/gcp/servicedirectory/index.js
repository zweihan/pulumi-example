"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceIamPolicy = exports.ServiceIamMember = exports.ServiceIamBinding = exports.Service = exports.NamespaceIamPolicy = exports.NamespaceIamMember = exports.NamespaceIamBinding = exports.Namespace = exports.Endpoint = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Endpoint = null;
utilities.lazyLoad(exports, ["Endpoint"], () => require("./endpoint"));
exports.Namespace = null;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));
exports.NamespaceIamBinding = null;
utilities.lazyLoad(exports, ["NamespaceIamBinding"], () => require("./namespaceIamBinding"));
exports.NamespaceIamMember = null;
utilities.lazyLoad(exports, ["NamespaceIamMember"], () => require("./namespaceIamMember"));
exports.NamespaceIamPolicy = null;
utilities.lazyLoad(exports, ["NamespaceIamPolicy"], () => require("./namespaceIamPolicy"));
exports.Service = null;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));
exports.ServiceIamBinding = null;
utilities.lazyLoad(exports, ["ServiceIamBinding"], () => require("./serviceIamBinding"));
exports.ServiceIamMember = null;
utilities.lazyLoad(exports, ["ServiceIamMember"], () => require("./serviceIamMember"));
exports.ServiceIamPolicy = null;
utilities.lazyLoad(exports, ["ServiceIamPolicy"], () => require("./serviceIamPolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:servicedirectory/endpoint:Endpoint":
                return new exports.Endpoint(name, undefined, { urn });
            case "gcp:servicedirectory/namespace:Namespace":
                return new exports.Namespace(name, undefined, { urn });
            case "gcp:servicedirectory/namespaceIamBinding:NamespaceIamBinding":
                return new exports.NamespaceIamBinding(name, undefined, { urn });
            case "gcp:servicedirectory/namespaceIamMember:NamespaceIamMember":
                return new exports.NamespaceIamMember(name, undefined, { urn });
            case "gcp:servicedirectory/namespaceIamPolicy:NamespaceIamPolicy":
                return new exports.NamespaceIamPolicy(name, undefined, { urn });
            case "gcp:servicedirectory/service:Service":
                return new exports.Service(name, undefined, { urn });
            case "gcp:servicedirectory/serviceIamBinding:ServiceIamBinding":
                return new exports.ServiceIamBinding(name, undefined, { urn });
            case "gcp:servicedirectory/serviceIamMember:ServiceIamMember":
                return new exports.ServiceIamMember(name, undefined, { urn });
            case "gcp:servicedirectory/serviceIamPolicy:ServiceIamPolicy":
                return new exports.ServiceIamPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "servicedirectory/endpoint", _module);
pulumi.runtime.registerResourceModule("gcp", "servicedirectory/namespace", _module);
pulumi.runtime.registerResourceModule("gcp", "servicedirectory/namespaceIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "servicedirectory/namespaceIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "servicedirectory/namespaceIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "servicedirectory/service", _module);
pulumi.runtime.registerResourceModule("gcp", "servicedirectory/serviceIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "servicedirectory/serviceIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "servicedirectory/serviceIamPolicy", _module);
//# sourceMappingURL=index.js.map