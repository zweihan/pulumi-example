import * as pulumi from "@pulumi/pulumi";
/**
 * An `Environment KeyStore` in Apigee.
 *
 * To get more information about EnvKeystore, see:
 *
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores/create)
 * * How-to Guides
 *     * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
 *
 * ## Import
 *
 * EnvKeystore can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:apigee/envKeystore:EnvKeystore default {{env_id}}/keystores/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:apigee/envKeystore:EnvKeystore default {{env_id}}/{{name}}
 * ```
 */
export declare class EnvKeystore extends pulumi.CustomResource {
    /**
     * Get an existing EnvKeystore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvKeystoreState, opts?: pulumi.CustomResourceOptions): EnvKeystore;
    /**
     * Returns true if the given object is an instance of EnvKeystore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EnvKeystore;
    /**
     * Aliases in this keystore.
     */
    readonly aliases: pulumi.Output<string[]>;
    /**
     * The Apigee environment group associated with the Apigee environment,
     * in the format `organizations/{{org_name}}/environments/{{env_name}}`.
     */
    readonly envId: pulumi.Output<string>;
    /**
     * The name of the newly created keystore.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a EnvKeystore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvKeystoreArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EnvKeystore resources.
 */
export interface EnvKeystoreState {
    /**
     * Aliases in this keystore.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Apigee environment group associated with the Apigee environment,
     * in the format `organizations/{{org_name}}/environments/{{env_name}}`.
     */
    envId?: pulumi.Input<string>;
    /**
     * The name of the newly created keystore.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EnvKeystore resource.
 */
export interface EnvKeystoreArgs {
    /**
     * The Apigee environment group associated with the Apigee environment,
     * in the format `organizations/{{org_name}}/environments/{{env_name}}`.
     */
    envId: pulumi.Input<string>;
    /**
     * The name of the newly created keystore.
     */
    name?: pulumi.Input<string>;
}
