import * as pulumi from "@pulumi/pulumi";
/**
 * An `Instance attachment` in Apigee.
 *
 * To get more information about InstanceAttachment, see:
 *
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.attachments/create)
 * * How-to Guides
 *     * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
 *
 * ## Example Usage
 * ### Apigee Instance Attachment Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = new gcp.organizations.Project("project", {
 *     projectId: "my-project",
 *     orgId: "",
 *     billingAccount: "",
 * });
 * const apigee = new gcp.projects.Service("apigee", {
 *     project: project.projectId,
 *     service: "apigee.googleapis.com",
 * });
 * const compute = new gcp.projects.Service("compute", {
 *     project: project.projectId,
 *     service: "compute.googleapis.com",
 * });
 * const servicenetworking = new gcp.projects.Service("servicenetworking", {
 *     project: project.projectId,
 *     service: "servicenetworking.googleapis.com",
 * });
 * const apigeeNetwork = new gcp.compute.Network("apigeeNetwork", {project: project.projectId}, {
 *     dependsOn: [compute],
 * });
 * const apigeeRange = new gcp.compute.GlobalAddress("apigeeRange", {
 *     purpose: "VPC_PEERING",
 *     addressType: "INTERNAL",
 *     prefixLength: 16,
 *     network: apigeeNetwork.id,
 *     project: project.projectId,
 * });
 * const apigeeVpcConnection = new gcp.servicenetworking.Connection("apigeeVpcConnection", {
 *     network: apigeeNetwork.id,
 *     service: "servicenetworking.googleapis.com",
 *     reservedPeeringRanges: [apigeeRange.name],
 * }, {
 *     dependsOn: [servicenetworking],
 * });
 * const apigeeOrg = new gcp.apigee.Organization("apigeeOrg", {
 *     analyticsRegion: "us-central1",
 *     projectId: project.projectId,
 *     authorizedNetwork: apigeeNetwork.id,
 * }, {
 *     dependsOn: [
 *         apigeeVpcConnection,
 *         apigee,
 *     ],
 * });
 * const apigeeIns = new gcp.apigee.Instance("apigeeIns", {
 *     location: "us-central1",
 *     orgId: apigeeOrg.id,
 * });
 * const apigeeEnv = new gcp.apigee.Environment("apigeeEnv", {
 *     orgId: apigeeOrg.id,
 *     description: "Apigee Environment",
 *     displayName: "environment-1",
 * });
 * const instanceAttachment = new gcp.apigee.InstanceAttachment("instanceAttachment", {
 *     instanceId: google_apigee_instance.apigee_instance.id,
 *     environment: apigeeEnv.name,
 * });
 * ```
 *
 * ## Import
 *
 * InstanceAttachment can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:apigee/instanceAttachment:InstanceAttachment default {{instance_id}}/attachments/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:apigee/instanceAttachment:InstanceAttachment default {{instance_id}}/{{name}}
 * ```
 */
export declare class InstanceAttachment extends pulumi.CustomResource {
    /**
     * Get an existing InstanceAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceAttachmentState, opts?: pulumi.CustomResourceOptions): InstanceAttachment;
    /**
     * Returns true if the given object is an instance of InstanceAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is InstanceAttachment;
    /**
     * The resource ID of the environment.
     */
    readonly environment: pulumi.Output<string>;
    /**
     * The Apigee instance associated with the Apigee environment,
     * in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
     */
    readonly instanceId: pulumi.Output<string>;
    /**
     * The name of the newly created  attachment (output parameter).
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a InstanceAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceAttachmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering InstanceAttachment resources.
 */
export interface InstanceAttachmentState {
    /**
     * The resource ID of the environment.
     */
    environment?: pulumi.Input<string>;
    /**
     * The Apigee instance associated with the Apigee environment,
     * in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The name of the newly created  attachment (output parameter).
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a InstanceAttachment resource.
 */
export interface InstanceAttachmentArgs {
    /**
     * The resource ID of the environment.
     */
    environment: pulumi.Input<string>;
    /**
     * The Apigee instance associated with the Apigee environment,
     * in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
     */
    instanceId: pulumi.Input<string>;
}
