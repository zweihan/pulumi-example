"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TenantOauthIdpConfig = exports.TenantInboundSamlConfig = exports.TenantDefaultSupportedIdpConfig = exports.Tenant = exports.ProjectDefaultConfig = exports.OauthIdpConfig = exports.InboundSamlConfig = exports.DefaultSupportedIdpConfig = exports.Config = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Config = null;
utilities.lazyLoad(exports, ["Config"], () => require("./config"));
exports.DefaultSupportedIdpConfig = null;
utilities.lazyLoad(exports, ["DefaultSupportedIdpConfig"], () => require("./defaultSupportedIdpConfig"));
exports.InboundSamlConfig = null;
utilities.lazyLoad(exports, ["InboundSamlConfig"], () => require("./inboundSamlConfig"));
exports.OauthIdpConfig = null;
utilities.lazyLoad(exports, ["OauthIdpConfig"], () => require("./oauthIdpConfig"));
exports.ProjectDefaultConfig = null;
utilities.lazyLoad(exports, ["ProjectDefaultConfig"], () => require("./projectDefaultConfig"));
exports.Tenant = null;
utilities.lazyLoad(exports, ["Tenant"], () => require("./tenant"));
exports.TenantDefaultSupportedIdpConfig = null;
utilities.lazyLoad(exports, ["TenantDefaultSupportedIdpConfig"], () => require("./tenantDefaultSupportedIdpConfig"));
exports.TenantInboundSamlConfig = null;
utilities.lazyLoad(exports, ["TenantInboundSamlConfig"], () => require("./tenantInboundSamlConfig"));
exports.TenantOauthIdpConfig = null;
utilities.lazyLoad(exports, ["TenantOauthIdpConfig"], () => require("./tenantOauthIdpConfig"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:identityplatform/config:Config":
                return new exports.Config(name, undefined, { urn });
            case "gcp:identityplatform/defaultSupportedIdpConfig:DefaultSupportedIdpConfig":
                return new exports.DefaultSupportedIdpConfig(name, undefined, { urn });
            case "gcp:identityplatform/inboundSamlConfig:InboundSamlConfig":
                return new exports.InboundSamlConfig(name, undefined, { urn });
            case "gcp:identityplatform/oauthIdpConfig:OauthIdpConfig":
                return new exports.OauthIdpConfig(name, undefined, { urn });
            case "gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig":
                return new exports.ProjectDefaultConfig(name, undefined, { urn });
            case "gcp:identityplatform/tenant:Tenant":
                return new exports.Tenant(name, undefined, { urn });
            case "gcp:identityplatform/tenantDefaultSupportedIdpConfig:TenantDefaultSupportedIdpConfig":
                return new exports.TenantDefaultSupportedIdpConfig(name, undefined, { urn });
            case "gcp:identityplatform/tenantInboundSamlConfig:TenantInboundSamlConfig":
                return new exports.TenantInboundSamlConfig(name, undefined, { urn });
            case "gcp:identityplatform/tenantOauthIdpConfig:TenantOauthIdpConfig":
                return new exports.TenantOauthIdpConfig(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "identityplatform/config", _module);
pulumi.runtime.registerResourceModule("gcp", "identityplatform/defaultSupportedIdpConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "identityplatform/inboundSamlConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "identityplatform/oauthIdpConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "identityplatform/projectDefaultConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "identityplatform/tenant", _module);
pulumi.runtime.registerResourceModule("gcp", "identityplatform/tenantDefaultSupportedIdpConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "identityplatform/tenantInboundSamlConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "identityplatform/tenantOauthIdpConfig", _module);
//# sourceMappingURL=index.js.map