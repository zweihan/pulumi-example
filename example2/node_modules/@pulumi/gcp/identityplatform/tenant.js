"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tenant = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Tenant configuration in a multi-tenant project.
 *
 * You must enable the
 * [Google Identity Platform](https://console.cloud.google.com/marketplace/details/google-cloud-platform/customer-identity) in
 * the marketplace prior to using this resource.
 *
 * You must [enable multi-tenancy](https://cloud.google.com/identity-platform/docs/multi-tenancy-quickstart) via
 * the Cloud Console prior to creating tenants.
 *
 * ## Example Usage
 * ### Identity Platform Tenant Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const tenant = new gcp.identityplatform.Tenant("tenant", {
 *     allowPasswordSignup: true,
 *     displayName: "tenant",
 * });
 * ```
 *
 * ## Import
 *
 * Tenant can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/tenant:Tenant default projects/{{project}}/tenants/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/tenant:Tenant default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/tenant:Tenant default {{name}}
 * ```
 */
class Tenant extends pulumi.CustomResource {
    /**
     * Get an existing Tenant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Tenant(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Tenant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tenant.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["allowPasswordSignup"] = state ? state.allowPasswordSignup : undefined;
            resourceInputs["disableAuth"] = state ? state.disableAuth : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enableEmailLinkSignin"] = state ? state.enableEmailLinkSignin : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["allowPasswordSignup"] = args ? args.allowPasswordSignup : undefined;
            resourceInputs["disableAuth"] = args ? args.disableAuth : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enableEmailLinkSignin"] = args ? args.enableEmailLinkSignin : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Tenant.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Tenant = Tenant;
/** @internal */
Tenant.__pulumiType = 'gcp:identityplatform/tenant:Tenant';
//# sourceMappingURL=tenant.js.map