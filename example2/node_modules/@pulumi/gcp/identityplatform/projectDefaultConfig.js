"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectDefaultConfig = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * There is no persistent data associated with this resource.
 *
 * > **Warning:** If you are using User ADCs (Application Default Credentials) with this resource,
 * you must specify a `billingProject` and set `userProjectOverride` to true
 * in the provider configuration. Otherwise the ACM API will return a 403 error.
 * Your account must have the `serviceusage.services.use` permission on the
 * `billingProject` you defined.
 *
 * ## Example Usage
 * ### Identity Platform Project Default Config
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.identityplatform.ProjectDefaultConfig("default", {signIn: {
 *     allowDuplicateEmails: true,
 *     anonymous: {
 *         enabled: true,
 *     },
 *     email: {
 *         enabled: true,
 *         passwordRequired: false,
 *     },
 *     phoneNumber: {
 *         enabled: true,
 *         testPhoneNumbers: {
 *             "+11231231234": "000000",
 *         },
 *     },
 * }});
 * ```
 *
 * ## Import
 *
 * ProjectDefaultConfig can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig default projects/{{project}}/config/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig default {{name}}
 * ```
 */
class ProjectDefaultConfig extends pulumi.CustomResource {
    /**
     * Get an existing ProjectDefaultConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ProjectDefaultConfig(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ProjectDefaultConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectDefaultConfig.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["signIn"] = state ? state.signIn : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["signIn"] = args ? args.signIn : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProjectDefaultConfig.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ProjectDefaultConfig = ProjectDefaultConfig;
/** @internal */
ProjectDefaultConfig.__pulumiType = 'gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig';
//# sourceMappingURL=projectDefaultConfig.js.map