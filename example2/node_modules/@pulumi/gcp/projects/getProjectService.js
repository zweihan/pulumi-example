"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectServiceOutput = exports.getProjectService = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Verify the API service for the Google Cloud Platform project to see if it is enabled or not.
 *
 * For a list of services available, visit the [API library page](https://console.cloud.google.com/apis/library)
 * or run `gcloud services list --available`.
 *
 * This datasource requires the [Service Usage API](https://console.cloud.google.com/apis/library/serviceusage.googleapis.com)
 * to use.
 *
 * To get more information about `gcp.projects.Service`, see:
 *
 * * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1/services)
 * * How-to Guides
 *     * [Enabling and Disabling Services](https://cloud.google.com/service-usage/docs/enable-disable)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-project-service = gcp.projects.getProjectService({
 *     service: "my-project-service",
 * });
 * ```
 */
function getProjectService(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:projects/getProjectService:getProjectService", {
        "project": args.project,
        "service": args.service,
    }, opts);
}
exports.getProjectService = getProjectService;
/**
 * Verify the API service for the Google Cloud Platform project to see if it is enabled or not.
 *
 * For a list of services available, visit the [API library page](https://console.cloud.google.com/apis/library)
 * or run `gcloud services list --available`.
 *
 * This datasource requires the [Service Usage API](https://console.cloud.google.com/apis/library/serviceusage.googleapis.com)
 * to use.
 *
 * To get more information about `gcp.projects.Service`, see:
 *
 * * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1/services)
 * * How-to Guides
 *     * [Enabling and Disabling Services](https://cloud.google.com/service-usage/docs/enable-disable)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-project-service = gcp.projects.getProjectService({
 *     service: "my-project-service",
 * });
 * ```
 */
function getProjectServiceOutput(args, opts) {
    return pulumi.output(args).apply((a) => getProjectService(a, opts));
}
exports.getProjectServiceOutput = getProjectServiceOutput;
//# sourceMappingURL=getProjectService.js.map