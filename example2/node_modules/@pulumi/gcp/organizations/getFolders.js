"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFoldersOutput = exports.getFolders = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Retrieve information about a set of folders based on a parent ID. See the
 * [REST API](https://cloud.google.com/resource-manager/reference/rest/v3/folders/list)
 * for more details.
 *
 * ## Example Usage
 * ### Searching For Folders At The Root Of An Org
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-org-folders = gcp.organizations.getFolders({
 *     parentId: `organizations/${_var.organization_id}`,
 * });
 * const first-folder = my_org_folders.then(my_org_folders => gcp.organizations.getFolder({
 *     folder: my_org_folders.folders?.[0]?.name,
 * }));
 * ```
 */
function getFolders(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:organizations/getFolders:getFolders", {
        "parentId": args.parentId,
    }, opts);
}
exports.getFolders = getFolders;
/**
 * Retrieve information about a set of folders based on a parent ID. See the
 * [REST API](https://cloud.google.com/resource-manager/reference/rest/v3/folders/list)
 * for more details.
 *
 * ## Example Usage
 * ### Searching For Folders At The Root Of An Org
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-org-folders = gcp.organizations.getFolders({
 *     parentId: `organizations/${_var.organization_id}`,
 * });
 * const first-folder = my_org_folders.then(my_org_folders => gcp.organizations.getFolder({
 *     folder: my_org_folders.folders?.[0]?.name,
 * }));
 * ```
 */
function getFoldersOutput(args, opts) {
    return pulumi.output(args).apply((a) => getFolders(a, opts));
}
exports.getFoldersOutput = getFoldersOutput;
//# sourceMappingURL=getFolders.js.map