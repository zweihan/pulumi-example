import * as pulumi from "@pulumi/pulumi";
/**
 * CertificateMapEntry is a list of certificate configurations,
 * that have been issued for a particular hostname
 *
 * ## Example Usage
 * ### Certificate Manager Certificate Map Entry Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const certificateMap = new gcp.certificatemanager.CertificateMap("certificateMap", {
 *     description: "My acceptance test certificate map",
 *     labels: {
 *         terraform: "true",
 *         "acc-test": "true",
 *     },
 * });
 * const instance = new gcp.certificatemanager.DnsAuthorization("instance", {
 *     description: "The default dnss",
 *     domain: "subdomain.hashicorptest.com",
 * });
 * const instance2 = new gcp.certificatemanager.DnsAuthorization("instance2", {
 *     description: "The default dnss",
 *     domain: "subdomain2.hashicorptest.com",
 * });
 * const certificate = new gcp.certificatemanager.Certificate("certificate", {
 *     description: "The default cert",
 *     scope: "DEFAULT",
 *     managed: {
 *         domains: [
 *             instance.domain,
 *             instance2.domain,
 *         ],
 *         dnsAuthorizations: [
 *             instance.id,
 *             instance2.id,
 *         ],
 *     },
 * });
 * const _default = new gcp.certificatemanager.CertificateMapEntry("default", {
 *     description: "My acceptance test certificate map entry",
 *     map: certificateMap.name,
 *     labels: {
 *         terraform: "true",
 *         "acc-test": "true",
 *     },
 *     certificates: [certificate.id],
 *     matcher: "PRIMARY",
 * });
 * ```
 *
 * ## Import
 *
 * CertificateMapEntry can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:certificatemanager/certificateMapEntry:CertificateMapEntry default projects/{{project}}/locations/global/certificateMaps/{{map}}/certificateMapEntries/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:certificatemanager/certificateMapEntry:CertificateMapEntry default {{project}}/{{map}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:certificatemanager/certificateMapEntry:CertificateMapEntry default {{map}}/{{name}}
 * ```
 */
export declare class CertificateMapEntry extends pulumi.CustomResource {
    /**
     * Get an existing CertificateMapEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificateMapEntryState, opts?: pulumi.CustomResourceOptions): CertificateMapEntry;
    /**
     * Returns true if the given object is an instance of CertificateMapEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CertificateMapEntry;
    /**
     * A set of Certificates defines for the given hostname.
     * There can be defined up to fifteen certificates in each Certificate Map Entry.
     * Each certificate must match pattern projects/*&#47;locations/*&#47;certificates/*.
     */
    readonly certificates: pulumi.Output<string[]>;
    /**
     * Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format,
     * with nanosecond resolution and up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * A human-readable description of the resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com)
     * for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for
     * selecting a proper certificate.
     */
    readonly hostname: pulumi.Output<string | undefined>;
    /**
     * Set of labels associated with a Certificate Map Entry.
     * An object containing a list of "key": value pairs.
     * Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * A map entry that is inputted into the cetrificate map
     */
    readonly map: pulumi.Output<string>;
    /**
     * A predefined matcher for particular cases, other than SNI selection
     */
    readonly matcher: pulumi.Output<string | undefined>;
    /**
     * A user-defined name of the Certificate Map Entry. Certificate Map Entry
     * names must be unique globally and match pattern
     * 'projects/*&#47;locations/*&#47;certificateMaps/*&#47;certificateMapEntries/*'
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * A serving state of this Certificate Map Entry.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format,
     * with nanosecond resolution and up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a CertificateMapEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateMapEntryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CertificateMapEntry resources.
 */
export interface CertificateMapEntryState {
    /**
     * A set of Certificates defines for the given hostname.
     * There can be defined up to fifteen certificates in each Certificate Map Entry.
     * Each certificate must match pattern projects/*&#47;locations/*&#47;certificates/*.
     */
    certificates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format,
     * with nanosecond resolution and up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    createTime?: pulumi.Input<string>;
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com)
     * for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for
     * selecting a proper certificate.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Set of labels associated with a Certificate Map Entry.
     * An object containing a list of "key": value pairs.
     * Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map entry that is inputted into the cetrificate map
     */
    map?: pulumi.Input<string>;
    /**
     * A predefined matcher for particular cases, other than SNI selection
     */
    matcher?: pulumi.Input<string>;
    /**
     * A user-defined name of the Certificate Map Entry. Certificate Map Entry
     * names must be unique globally and match pattern
     * 'projects/*&#47;locations/*&#47;certificateMaps/*&#47;certificateMapEntries/*'
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * A serving state of this Certificate Map Entry.
     */
    state?: pulumi.Input<string>;
    /**
     * Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format,
     * with nanosecond resolution and up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CertificateMapEntry resource.
 */
export interface CertificateMapEntryArgs {
    /**
     * A set of Certificates defines for the given hostname.
     * There can be defined up to fifteen certificates in each Certificate Map Entry.
     * Each certificate must match pattern projects/*&#47;locations/*&#47;certificates/*.
     */
    certificates: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com)
     * for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for
     * selecting a proper certificate.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Set of labels associated with a Certificate Map Entry.
     * An object containing a list of "key": value pairs.
     * Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map entry that is inputted into the cetrificate map
     */
    map: pulumi.Input<string>;
    /**
     * A predefined matcher for particular cases, other than SNI selection
     */
    matcher?: pulumi.Input<string>;
    /**
     * A user-defined name of the Certificate Map Entry. Certificate Map Entry
     * names must be unique globally and match pattern
     * 'projects/*&#47;locations/*&#47;certificateMaps/*&#47;certificateMapEntries/*'
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
