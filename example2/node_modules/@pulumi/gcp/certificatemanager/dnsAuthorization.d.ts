import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * DnsAuthorization represents a HTTP-reachable backend for a DnsAuthorization.
 *
 * ## Example Usage
 * ### Certificate Manager Dns Authorization Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.certificatemanager.DnsAuthorization("default", {
 *     description: "The default dnss",
 *     domain: "%{random_suffix}.hashicorptest.com",
 * });
 * export const recordNameToInsert = {
 *     "google_certificate_manager_dns_authorization.default.dns_resource_record.0.name": [{}],
 *     value: "",
 * };
 * export const recordTypeToInsert = {
 *     "google_certificate_manager_dns_authorization.default.dns_resource_record.0.type": [{}],
 *     value: "",
 * };
 * export const recordDataToInsert = {
 *     "google_certificate_manager_dns_authorization.default.dns_resource_record.0.data": [{}],
 *     value: "",
 * };
 * ```
 *
 * ## Import
 *
 * DnsAuthorization can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:certificatemanager/dnsAuthorization:DnsAuthorization default projects/{{project}}/locations/global/dnsAuthorizations/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:certificatemanager/dnsAuthorization:DnsAuthorization default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:certificatemanager/dnsAuthorization:DnsAuthorization default {{name}}
 * ```
 */
export declare class DnsAuthorization extends pulumi.CustomResource {
    /**
     * Get an existing DnsAuthorization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsAuthorizationState, opts?: pulumi.CustomResourceOptions): DnsAuthorization;
    /**
     * Returns true if the given object is an instance of DnsAuthorization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DnsAuthorization;
    /**
     * A human-readable description of the resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The structure describing the DNS Resource Record that needs to be added
     * to DNS configuration for the authorization to be usable by
     * certificate.
     * Structure is documented below.
     */
    readonly dnsResourceRecords: pulumi.Output<outputs.certificatemanager.DnsAuthorizationDnsResourceRecord[]>;
    /**
     * A domain which is being authorized. A DnsAuthorization resource covers a
     * single domain and its wildcard, e.g. authorization for "example.com" can
     * be used to issue certificates for "example.com" and "*.example.com".
     */
    readonly domain: pulumi.Output<string>;
    /**
     * Set of label tags associated with the DNS Authorization resource.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Name of the resource; provided by the client when the resource is created.
     * The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
     * and all following characters must be a dash, underscore, letter or digit.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Create a DnsAuthorization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsAuthorizationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DnsAuthorization resources.
 */
export interface DnsAuthorizationState {
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The structure describing the DNS Resource Record that needs to be added
     * to DNS configuration for the authorization to be usable by
     * certificate.
     * Structure is documented below.
     */
    dnsResourceRecords?: pulumi.Input<pulumi.Input<inputs.certificatemanager.DnsAuthorizationDnsResourceRecord>[]>;
    /**
     * A domain which is being authorized. A DnsAuthorization resource covers a
     * single domain and its wildcard, e.g. authorization for "example.com" can
     * be used to issue certificates for "example.com" and "*.example.com".
     */
    domain?: pulumi.Input<string>;
    /**
     * Set of label tags associated with the DNS Authorization resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of the resource; provided by the client when the resource is created.
     * The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
     * and all following characters must be a dash, underscore, letter or digit.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DnsAuthorization resource.
 */
export interface DnsAuthorizationArgs {
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A domain which is being authorized. A DnsAuthorization resource covers a
     * single domain and its wildcard, e.g. authorization for "example.com" can
     * be used to issue certificates for "example.com" and "*.example.com".
     */
    domain: pulumi.Input<string>;
    /**
     * Set of label tags associated with the DNS Authorization resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of the resource; provided by the client when the resource is created.
     * The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
     * and all following characters must be a dash, underscore, letter or digit.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
