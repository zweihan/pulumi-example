"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getResourcesSearchAllOutput = exports.getResourcesSearchAll = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 * ### Searching For All Projects In An Org
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const projects = gcp.cloudasset.getResourcesSearchAll({
 *     scope: "organizations/0123456789",
 *     assetTypes: ["cloudresourcemanager.googleapis.com/Project"],
 * });
 * ```
 * ### Searching For All Projects With CloudBuild API Enabled
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const cloudBuildProjects = gcp.cloudasset.getResourcesSearchAll({
 *     scope: "organizations/0123456789",
 *     assetTypes: ["serviceusage.googleapis.com/Service"],
 *     query: "displayName:cloudbuild.googleapis.com AND state:ENABLED",
 * });
 * ```
 * ### Searching For All Service Accounts In A Project
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const projectServiceAccounts = gcp.cloudasset.getResourcesSearchAll({
 *     scope: "projects/my-project-id",
 *     assetTypes: ["iam.googleapis.com/ServiceAccount"],
 * });
 * ```
 */
function getResourcesSearchAll(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:cloudasset/getResourcesSearchAll:getResourcesSearchAll", {
        "assetTypes": args.assetTypes,
        "query": args.query,
        "scope": args.scope,
    }, opts);
}
exports.getResourcesSearchAll = getResourcesSearchAll;
/**
 * ## Example Usage
 * ### Searching For All Projects In An Org
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const projects = gcp.cloudasset.getResourcesSearchAll({
 *     scope: "organizations/0123456789",
 *     assetTypes: ["cloudresourcemanager.googleapis.com/Project"],
 * });
 * ```
 * ### Searching For All Projects With CloudBuild API Enabled
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const cloudBuildProjects = gcp.cloudasset.getResourcesSearchAll({
 *     scope: "organizations/0123456789",
 *     assetTypes: ["serviceusage.googleapis.com/Service"],
 *     query: "displayName:cloudbuild.googleapis.com AND state:ENABLED",
 * });
 * ```
 * ### Searching For All Service Accounts In A Project
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const projectServiceAccounts = gcp.cloudasset.getResourcesSearchAll({
 *     scope: "projects/my-project-id",
 *     assetTypes: ["iam.googleapis.com/ServiceAccount"],
 * });
 * ```
 */
function getResourcesSearchAllOutput(args, opts) {
    return pulumi.output(args).apply((a) => getResourcesSearchAll(a, opts));
}
exports.getResourcesSearchAllOutput = getResourcesSearchAllOutput;
//# sourceMappingURL=getResourcesSearchAll.js.map