"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationFeed = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Describes a Cloud Asset Inventory feed used to to listen to asset updates.
 *
 * To get more information about OrganizationFeed, see:
 *
 * * [API documentation](https://cloud.google.com/asset-inventory/docs/reference/rest/)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/asset-inventory/docs)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * OrganizationFeed can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:cloudasset/organizationFeed:OrganizationFeed default organizations/{{org_id}}/feeds/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:cloudasset/organizationFeed:OrganizationFeed default {{org_id}}/{{name}}
 * ```
 */
class OrganizationFeed extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationFeed resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new OrganizationFeed(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of OrganizationFeed.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationFeed.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["assetNames"] = state ? state.assetNames : undefined;
            resourceInputs["assetTypes"] = state ? state.assetTypes : undefined;
            resourceInputs["billingProject"] = state ? state.billingProject : undefined;
            resourceInputs["condition"] = state ? state.condition : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["feedId"] = state ? state.feedId : undefined;
            resourceInputs["feedOutputConfig"] = state ? state.feedOutputConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.billingProject === undefined) && !opts.urn) {
                throw new Error("Missing required property 'billingProject'");
            }
            if ((!args || args.feedId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'feedId'");
            }
            if ((!args || args.feedOutputConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'feedOutputConfig'");
            }
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            resourceInputs["assetNames"] = args ? args.assetNames : undefined;
            resourceInputs["assetTypes"] = args ? args.assetTypes : undefined;
            resourceInputs["billingProject"] = args ? args.billingProject : undefined;
            resourceInputs["condition"] = args ? args.condition : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["feedId"] = args ? args.feedId : undefined;
            resourceInputs["feedOutputConfig"] = args ? args.feedOutputConfig : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationFeed.__pulumiType, name, resourceInputs, opts);
    }
}
exports.OrganizationFeed = OrganizationFeed;
/** @internal */
OrganizationFeed.__pulumiType = 'gcp:cloudasset/organizationFeed:OrganizationFeed';
//# sourceMappingURL=organizationFeed.js.map