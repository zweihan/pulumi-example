import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Provide access to a Resource Policy's attributes. For more information see [the official documentation](https://cloud.google.com/compute/docs/disks/scheduled-snapshots) or the [API](https://cloud.google.com/compute/docs/reference/rest/beta/resourcePolicies).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const daily = gcp.compute.getResourcePolicy({
 *     name: "daily",
 *     region: "us-central1",
 * });
 * ```
 */
export declare function getResourcePolicy(args: GetResourcePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcePolicyResult>;
/**
 * A collection of arguments for invoking getResourcePolicy.
 */
export interface GetResourcePolicyArgs {
    /**
     * The name of the Resource Policy.
     */
    name: string;
    /**
     * Project from which to list the Resource Policy. Defaults to project declared in the provider.
     */
    project?: string;
    /**
     * Region where the Resource Policy resides.
     */
    region?: string;
}
/**
 * A collection of values returned by getResourcePolicy.
 */
export interface GetResourcePolicyResult {
    /**
     * Description of this Resource Policy.
     */
    readonly description: string;
    readonly diskConsistencyGroupPolicies: outputs.compute.GetResourcePolicyDiskConsistencyGroupPolicy[];
    readonly groupPlacementPolicies: outputs.compute.GetResourcePolicyGroupPlacementPolicy[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceSchedulePolicies: outputs.compute.GetResourcePolicyInstanceSchedulePolicy[];
    readonly name: string;
    readonly project?: string;
    readonly region?: string;
    /**
     * The URI of the resource.
     */
    readonly selfLink: string;
    readonly snapshotSchedulePolicies: outputs.compute.GetResourcePolicySnapshotSchedulePolicy[];
}
/**
 * Provide access to a Resource Policy's attributes. For more information see [the official documentation](https://cloud.google.com/compute/docs/disks/scheduled-snapshots) or the [API](https://cloud.google.com/compute/docs/reference/rest/beta/resourcePolicies).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const daily = gcp.compute.getResourcePolicy({
 *     name: "daily",
 *     region: "us-central1",
 * });
 * ```
 */
export declare function getResourcePolicyOutput(args: GetResourcePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcePolicyResult>;
/**
 * A collection of arguments for invoking getResourcePolicy.
 */
export interface GetResourcePolicyOutputArgs {
    /**
     * The name of the Resource Policy.
     */
    name: pulumi.Input<string>;
    /**
     * Project from which to list the Resource Policy. Defaults to project declared in the provider.
     */
    project?: pulumi.Input<string>;
    /**
     * Region where the Resource Policy resides.
     */
    region?: pulumi.Input<string>;
}
