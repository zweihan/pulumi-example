import * as pulumi from "@pulumi/pulumi";
/**
 * Get information of a specified compute network peering. For more information see
 * [the official documentation](https://cloud.google.com/compute/docs/vpc/vpc-peering)
 * and
 * [API](https://cloud.google.com/compute/docs/reference/latest/networks).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.compute.Network("default", {autoCreateSubnetworks: false});
 * const other = new gcp.compute.Network("other", {autoCreateSubnetworks: false});
 * const peering1 = new gcp.compute.NetworkPeering("peering1", {
 *     network: _default.selfLink,
 *     peerNetwork: other.selfLink,
 * });
 * const peering2 = new gcp.compute.NetworkPeering("peering2", {
 *     network: other.selfLink,
 *     peerNetwork: _default.selfLink,
 * });
 * const peering1Ds = gcp.compute.getNetworkPeeringOutput({
 *     name: peering1.name,
 *     network: peering1.network,
 * });
 * ```
 */
export declare function getNetworkPeering(args: GetNetworkPeeringArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkPeeringResult>;
/**
 * A collection of arguments for invoking getNetworkPeering.
 */
export interface GetNetworkPeeringArgs {
    /**
     * Name of the peering.
     */
    name: string;
    /**
     * The primary network of the peering.
     */
    network: string;
}
/**
 * A collection of values returned by getNetworkPeering.
 */
export interface GetNetworkPeeringResult {
    readonly exportCustomRoutes: boolean;
    readonly exportSubnetRoutesWithPublicIp: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly importCustomRoutes: boolean;
    readonly importSubnetRoutesWithPublicIp: boolean;
    readonly name: string;
    readonly network: string;
    readonly peerNetwork: string;
    readonly stackType: string;
    readonly state: string;
    readonly stateDetails: string;
}
/**
 * Get information of a specified compute network peering. For more information see
 * [the official documentation](https://cloud.google.com/compute/docs/vpc/vpc-peering)
 * and
 * [API](https://cloud.google.com/compute/docs/reference/latest/networks).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.compute.Network("default", {autoCreateSubnetworks: false});
 * const other = new gcp.compute.Network("other", {autoCreateSubnetworks: false});
 * const peering1 = new gcp.compute.NetworkPeering("peering1", {
 *     network: _default.selfLink,
 *     peerNetwork: other.selfLink,
 * });
 * const peering2 = new gcp.compute.NetworkPeering("peering2", {
 *     network: other.selfLink,
 *     peerNetwork: _default.selfLink,
 * });
 * const peering1Ds = gcp.compute.getNetworkPeeringOutput({
 *     name: peering1.name,
 *     network: peering1.network,
 * });
 * ```
 */
export declare function getNetworkPeeringOutput(args: GetNetworkPeeringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkPeeringResult>;
/**
 * A collection of arguments for invoking getNetworkPeering.
 */
export interface GetNetworkPeeringOutputArgs {
    /**
     * Name of the peering.
     */
    name: pulumi.Input<string>;
    /**
     * The primary network of the peering.
     */
    network: pulumi.Input<string>;
}
