"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallPolicyRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Hierarchical firewall policy rules let you create and enforce a consistent firewall policy across your organization. Rules can explicitly allow or deny connections or delegate evaluation to lower level policies.
 *
 * For more information see the [official documentation](https://cloud.google.com/vpc/docs/using-firewall-policies#create-rules)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultFirewallPolicy = new gcp.compute.FirewallPolicy("defaultFirewallPolicy", {
 *     parent: "organizations/12345",
 *     shortName: "my-policy",
 *     description: "Example Resource",
 * });
 * const defaultFirewallPolicyRule = new gcp.compute.FirewallPolicyRule("defaultFirewallPolicyRule", {
 *     firewallPolicy: defaultFirewallPolicy.id,
 *     description: "Example Resource",
 *     priority: 9000,
 *     enableLogging: true,
 *     action: "allow",
 *     direction: "EGRESS",
 *     disabled: false,
 *     match: {
 *         layer4Configs: [{
 *             ipProtocol: "tcp",
 *             ports: [
 *                 "80",
 *                 "8080",
 *             ],
 *         }],
 *         destIpRanges: ["11.100.0.1/32"],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * FirewallPolicyRule can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:compute/firewallPolicyRule:FirewallPolicyRule default locations/global/firewallPolicies/{{firewall_policy}}/rules/{{priority}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/firewallPolicyRule:FirewallPolicyRule default {{firewall_policy}}/{{priority}}
 * ```
 */
class FirewallPolicyRule extends pulumi.CustomResource {
    /**
     * Get an existing FirewallPolicyRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FirewallPolicyRule(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FirewallPolicyRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallPolicyRule.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["enableLogging"] = state ? state.enableLogging : undefined;
            resourceInputs["firewallPolicy"] = state ? state.firewallPolicy : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["match"] = state ? state.match : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["ruleTupleCount"] = state ? state.ruleTupleCount : undefined;
            resourceInputs["targetResources"] = state ? state.targetResources : undefined;
            resourceInputs["targetServiceAccounts"] = state ? state.targetServiceAccounts : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.direction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if ((!args || args.firewallPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallPolicy'");
            }
            if ((!args || args.match === undefined) && !opts.urn) {
                throw new Error("Missing required property 'match'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["direction"] = args ? args.direction : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["enableLogging"] = args ? args.enableLogging : undefined;
            resourceInputs["firewallPolicy"] = args ? args.firewallPolicy : undefined;
            resourceInputs["match"] = args ? args.match : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["targetResources"] = args ? args.targetResources : undefined;
            resourceInputs["targetServiceAccounts"] = args ? args.targetServiceAccounts : undefined;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["ruleTupleCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallPolicyRule.__pulumiType, name, resourceInputs, opts);
    }
}
exports.FirewallPolicyRule = FirewallPolicyRule;
/** @internal */
FirewallPolicyRule.__pulumiType = 'gcp:compute/firewallPolicyRule:FirewallPolicyRule';
//# sourceMappingURL=firewallPolicyRule.js.map