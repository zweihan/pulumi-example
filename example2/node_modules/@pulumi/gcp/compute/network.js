"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Network = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a VPC network or legacy network resource on GCP.
 *
 * To get more information about Network, see:
 *
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/networks)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/vpc/docs/vpc)
 *
 * ## Example Usage
 * ### Network Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const vpcNetwork = new gcp.compute.Network("vpcNetwork", {});
 * ```
 * ### Network Custom Mtu
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const vpcNetwork = new gcp.compute.Network("vpcNetwork", {
 *     autoCreateSubnetworks: true,
 *     mtu: 1460,
 *     project: "my-project-name",
 * });
 * ```
 * ### Network Custom Firewall Enforcement Order
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const vpcNetwork = new gcp.compute.Network("vpcNetwork", {
 *     autoCreateSubnetworks: true,
 *     networkFirewallPolicyEnforcementOrder: "BEFORE_CLASSIC_FIREWALL",
 *     project: "my-project-name",
 * });
 * ```
 *
 * ## Import
 *
 * Network can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:compute/network:Network default projects/{{project}}/global/networks/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/network:Network default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/network:Network default {{name}}
 * ```
 */
class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Network(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Network.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["autoCreateSubnetworks"] = state ? state.autoCreateSubnetworks : undefined;
            resourceInputs["deleteDefaultRoutesOnCreate"] = state ? state.deleteDefaultRoutesOnCreate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableUlaInternalIpv6"] = state ? state.enableUlaInternalIpv6 : undefined;
            resourceInputs["gatewayIpv4"] = state ? state.gatewayIpv4 : undefined;
            resourceInputs["internalIpv6Range"] = state ? state.internalIpv6Range : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkFirewallPolicyEnforcementOrder"] = state ? state.networkFirewallPolicyEnforcementOrder : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["routingMode"] = state ? state.routingMode : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["autoCreateSubnetworks"] = args ? args.autoCreateSubnetworks : undefined;
            resourceInputs["deleteDefaultRoutesOnCreate"] = args ? args.deleteDefaultRoutesOnCreate : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableUlaInternalIpv6"] = args ? args.enableUlaInternalIpv6 : undefined;
            resourceInputs["internalIpv6Range"] = args ? args.internalIpv6Range : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkFirewallPolicyEnforcementOrder"] = args ? args.networkFirewallPolicyEnforcementOrder : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["routingMode"] = args ? args.routingMode : undefined;
            resourceInputs["gatewayIpv4"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Network.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Network = Network;
/** @internal */
Network.__pulumiType = 'gcp:compute/network:Network';
//# sourceMappingURL=network.js.map