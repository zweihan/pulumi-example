"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SSLPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Represents a SSL policy. SSL policies give you the ability to control the
 * features of SSL that your SSL proxy or HTTPS load balancer negotiates.
 *
 * To get more information about SslPolicy, see:
 *
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/sslPolicies)
 * * How-to Guides
 *     * [Using SSL Policies](https://cloud.google.com/compute/docs/load-balancing/ssl-policies)
 *
 * ## Example Usage
 * ### Ssl Policy Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const prod_ssl_policy = new gcp.compute.SSLPolicy("prod-ssl-policy", {profile: "MODERN"});
 * const nonprod_ssl_policy = new gcp.compute.SSLPolicy("nonprod-ssl-policy", {
 *     minTlsVersion: "TLS_1_2",
 *     profile: "MODERN",
 * });
 * const custom_ssl_policy = new gcp.compute.SSLPolicy("custom-ssl-policy", {
 *     customFeatures: [
 *         "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
 *         "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
 *     ],
 *     minTlsVersion: "TLS_1_2",
 *     profile: "CUSTOM",
 * });
 * ```
 *
 * ## Import
 *
 * SslPolicy can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:compute/sSLPolicy:SSLPolicy default projects/{{project}}/global/sslPolicies/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/sSLPolicy:SSLPolicy default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/sSLPolicy:SSLPolicy default {{name}}
 * ```
 */
class SSLPolicy extends pulumi.CustomResource {
    /**
     * Get an existing SSLPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SSLPolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SSLPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SSLPolicy.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["customFeatures"] = state ? state.customFeatures : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabledFeatures"] = state ? state.enabledFeatures : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["minTlsVersion"] = state ? state.minTlsVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["customFeatures"] = args ? args.customFeatures : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["minTlsVersion"] = args ? args.minTlsVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["enabledFeatures"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SSLPolicy.__pulumiType, name, resourceInputs, opts);
    }
}
exports.SSLPolicy = SSLPolicy;
/** @internal */
SSLPolicy.__pulumiType = 'gcp:compute/sSLPolicy:SSLPolicy';
//# sourceMappingURL=sslpolicy.js.map