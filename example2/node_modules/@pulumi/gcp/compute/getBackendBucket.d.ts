import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Get information about a BackendBucket.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-backend-bucket = gcp.compute.getBackendBucket({
 *     name: "my-backend",
 * });
 * ```
 */
export declare function getBackendBucket(args: GetBackendBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetBackendBucketResult>;
/**
 * A collection of arguments for invoking getBackendBucket.
 */
export interface GetBackendBucketArgs {
    /**
     * Name of the resource.
     */
    name: string;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
}
/**
 * A collection of values returned by getBackendBucket.
 */
export interface GetBackendBucketResult {
    readonly bucketName: string;
    readonly cdnPolicies: outputs.compute.GetBackendBucketCdnPolicy[];
    readonly compressionMode: string;
    readonly creationTimestamp: string;
    readonly customResponseHeaders: string[];
    readonly description: string;
    readonly edgeSecurityPolicy: string;
    readonly enableCdn: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly project?: string;
    readonly selfLink: string;
}
/**
 * Get information about a BackendBucket.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-backend-bucket = gcp.compute.getBackendBucket({
 *     name: "my-backend",
 * });
 * ```
 */
export declare function getBackendBucketOutput(args: GetBackendBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackendBucketResult>;
/**
 * A collection of arguments for invoking getBackendBucket.
 */
export interface GetBackendBucketOutputArgs {
    /**
     * Name of the resource.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
