import * as pulumi from "@pulumi/pulumi";
/**
 * The Compute NetworkFirewallPolicy resource
 *
 * ## Example Usage
 * ### Global
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.compute.NetworkFirewallPolicy("primary", {
 *     description: "Sample global network firewall policy",
 *     project: "my-project-name",
 * });
 * ```
 *
 * ## Import
 *
 * NetworkFirewallPolicy can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy default projects/{{project}}/global/firewallPolicies/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy default {{name}}
 * ```
 */
export declare class NetworkFirewallPolicy extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFirewallPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkFirewallPolicyState, opts?: pulumi.CustomResourceOptions): NetworkFirewallPolicy;
    /**
     * Returns true if the given object is an instance of NetworkFirewallPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkFirewallPolicy;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    readonly creationTimestamp: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Fingerprint of the resource. This field is used internally during updates of this resource.
     */
    readonly fingerprint: pulumi.Output<string>;
    /**
     * User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    readonly networkFirewallPolicyId: pulumi.Output<string>;
    /**
     * The project for the resource
     */
    readonly project: pulumi.Output<string>;
    /**
     * Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     */
    readonly ruleTupleCount: pulumi.Output<number>;
    /**
     * Server-defined URL for the resource.
     */
    readonly selfLink: pulumi.Output<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    readonly selfLinkWithId: pulumi.Output<string>;
    /**
     * Create a NetworkFirewallPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkFirewallPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering NetworkFirewallPolicy resources.
 */
export interface NetworkFirewallPolicyState {
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Fingerprint of the resource. This field is used internally during updates of this resource.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    networkFirewallPolicyId?: pulumi.Input<string>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     */
    ruleTupleCount?: pulumi.Input<number>;
    /**
     * Server-defined URL for the resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    selfLinkWithId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a NetworkFirewallPolicy resource.
 */
export interface NetworkFirewallPolicyArgs {
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
}
